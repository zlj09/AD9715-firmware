
 PARAMETER VERSION = 2.1.0


 PORT fpga_0_RS232_RX_pin = fpga_0_RS232_RX_pin, DIR = I, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_RS232_TX_pin = fpga_0_RS232_TX_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_clk_1_sys_clk_pin = CLK_S, DIR = I, SIGIS = CLK, CLK_FREQ = 50000000, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_rst_1_sys_rst_pin = sys_rst_s, DIR = I, SIGIS = RST, RST_POLARITY = 0, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT xps_iic_0_Sda_pin = xps_iic_0_Sda, DIR = IO, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = TRUE, ENABLE = SINGLE, TRI_I = , TRI_O = , TRI_T = , IOB_STATE = INFER
 PORT xps_iic_0_Scl_pin = xps_iic_0_Scl, DIR = IO, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = TRUE, ENABLE = SINGLE, TRI_I = , TRI_O = , TRI_T = , IOB_STATE = INFER
 PORT plb_dac_0_S_Data_pin = plb_dac_0_S_Data, DIR = O, VEC = [0:9], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT plb_dac_0_S_DCLKIO_pin = plb_dac_0_S_DCLKIO, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT plb_dac_0_S_Clkout_pin = plb_dac_0_S_Clkout, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT plb_dac_0_S_PinMD_pin = plb_dac_0_S_PinMD, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT plb_dac_0_S_ClkMD_pin = plb_dac_0_S_ClkMD, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT plb_dac_0_S_Format_pin = plb_dac_0_S_Format, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT plb_dac_0_S_PWRDN_pin = plb_dac_0_S_PWRDN, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER


BEGIN microblaze
 PARAMETER INSTANCE = microblaze_0
 PARAMETER C_INTERCONNECT_M_AXI_DP_BASE_ID = 0x00, DT = std_logic_vector, TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Unique Master ID, LONG_DESC = The unique master ID of the master interface. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BITWIDTH = 8, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0x00, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_IS_ACLK_ASYNC = 0, DT = integer, RANGE = (0, 1), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Is ACLK Asynchronous to Interconnect_ACLK, LONG_DESC = Is ACLK asynchronous with respect to the interconnect's ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_ACLK_RATIO = 1, DT = integer, TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = UPDATE, DESC = ACLK Frequency Ratio, LONG_DESC = In relation to C_INTERCONNECT_ACLK_RATIO on the interconnect, indicates the ratio of the ACLK frequency of this bus interface to the frequency of Interconnect_ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_ARB_PRIORITY = 0, DT = integer, RANGE = (0:15), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Arbitration Priority, LONG_DESC = Arbitration priority. Higher values indicate higher priority. Round-robin arbitration is used among all masters with priority value 0, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_AW_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AW channel, LONG_DESC = Insert register slice on AW channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_AR_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AR channel, LONG_DESC = Insert register slice on AR channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_W_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on W channel, LONG_DESC = Insert register slice on W channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_R_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on R channel, LONG_DESC = Insert register slice on R channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_B_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on B channel, LONG_DESC = Insert register slice on B channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_WRITE_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Write Data FIFO Depth, LONG_DESC = Depth of bus interface write data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_READ_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Read Data FIFO Depth, LONG_DESC = Depth of bus interface read data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_WRITE_ISSUING = 1, RANGE = (1, 2, 4, 8, 16, 32), ASSOCIATION = MASTER, DESC = Write Transaction Issuance Limit, LONG_DESC = Maximum number of active write transactions that the bus interface can generate. This parameter is ignored when the IP is connected to an interconnect in SASD mode., CONST_RANGE = , IS_RANGE_CONST = TRUE, AXI_VER = 1.01.a, BUS_TYPE = MASTER, ISVALID = (C_INTERCONNECT >= 2), DT = integer, BUS = M_AXI_DP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DP_READ_ISSUING = 1, RANGE = (1, 2, 4, 8, 16, 32), ASSOCIATION = MASTER, DESC = Read Transaction Issuance Limit, LONG_DESC = Maximum number of active read transactions that the bus interface can generate. This parameter is ignored when the IP is connected to an interconnect in SASD mode., CONST_RANGE = , IS_RANGE_CONST = TRUE, AXI_VER = 1.01.a, BUS_TYPE = MASTER, ISVALID = (C_INTERCONNECT >= 2), DT = integer, BUS = M_AXI_DP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_ADDED_AXI_PARAMS = TRUE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_M_AXI_DP_AXI_VER = 1.01.a, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_INTERCONNECT_M_AXI_IP_BASE_ID = 0x00, DT = std_logic_vector, TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Unique Master ID, LONG_DESC = The unique master ID of the master interface. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BITWIDTH = 8, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0x00, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_IS_ACLK_ASYNC = 0, DT = integer, RANGE = (0, 1), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Is ACLK Asynchronous to Interconnect_ACLK, LONG_DESC = Is ACLK asynchronous with respect to the interconnect's ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_ACLK_RATIO = 1, DT = integer, TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = UPDATE, DESC = ACLK Frequency Ratio, LONG_DESC = In relation to C_INTERCONNECT_ACLK_RATIO on the interconnect, indicates the ratio of the ACLK frequency of this bus interface to the frequency of Interconnect_ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_ARB_PRIORITY = 0, DT = integer, RANGE = (0:15), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Arbitration Priority, LONG_DESC = Arbitration priority. Higher values indicate higher priority. Round-robin arbitration is used among all masters with priority value 0, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_AW_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AW channel, LONG_DESC = Insert register slice on AW channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_AR_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AR channel, LONG_DESC = Insert register slice on AR channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_W_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on W channel, LONG_DESC = Insert register slice on W channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_R_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on R channel, LONG_DESC = Insert register slice on R channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_B_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on B channel, LONG_DESC = Insert register slice on B channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_WRITE_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Write Data FIFO Depth, LONG_DESC = Depth of bus interface write data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_READ_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Read Data FIFO Depth, LONG_DESC = Depth of bus interface read data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_WRITE_ISSUING = 1, DT = integer, RANGE = (1, 2, 4, 8, 16, 32), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Write Transaction Issuance Limit, LONG_DESC = Maximum number of active write transactions that the bus interface can generate. This parameter is ignored when the IP is connected to an interconnect in SASD mode., GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IP, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT >= 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IP_READ_ISSUING = 1, RANGE = (1, 2, 4, 8, 16, 32), ASSOCIATION = MASTER, DESC = Read Transaction Issuance Limit, LONG_DESC = Maximum number of active read transactions that the bus interface can generate. This parameter is ignored when the IP is connected to an interconnect in SASD mode., CONST_RANGE = , IS_RANGE_CONST = TRUE, AXI_VER = 1.01.a, BUS_TYPE = MASTER, ISVALID = (C_INTERCONNECT >= 2), DT = integer, BUS = M_AXI_IP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IP_ADDED_AXI_PARAMS = TRUE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_M_AXI_IP_AXI_VER = 1.01.a, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_INTERCONNECT_M_AXI_DC_BASE_ID = 0x00, DT = std_logic_vector, TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Unique Master ID, LONG_DESC = The unique master ID of the master interface. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BITWIDTH = 8, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0x00, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_IS_ACLK_ASYNC = 0, DT = integer, RANGE = (0, 1), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Is ACLK Asynchronous to Interconnect_ACLK, LONG_DESC = Is ACLK asynchronous with respect to the interconnect's ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_ACLK_RATIO = 1, DT = integer, TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = UPDATE, DESC = ACLK Frequency Ratio, LONG_DESC = In relation to C_INTERCONNECT_ACLK_RATIO on the interconnect, indicates the ratio of the ACLK frequency of this bus interface to the frequency of Interconnect_ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_ARB_PRIORITY = 0, DT = integer, RANGE = (0:15), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Arbitration Priority, LONG_DESC = Arbitration priority. Higher values indicate higher priority. Round-robin arbitration is used among all masters with priority value 0, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_AW_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AW channel, LONG_DESC = Insert register slice on AW channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_AR_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AR channel, LONG_DESC = Insert register slice on AR channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_W_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on W channel, LONG_DESC = Insert register slice on W channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_R_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on R channel, LONG_DESC = Insert register slice on R channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_B_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on B channel, LONG_DESC = Insert register slice on B channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_WRITE_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Write Data FIFO Depth, LONG_DESC = Depth of bus interface write data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_READ_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Read Data FIFO Depth, LONG_DESC = Depth of bus interface read data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_DC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_WRITE_ISSUING = 32, ASSOCIATION = MASTER, DESC = Write Transaction Issuance Limit, LONG_DESC = Maximum number of active write transactions that the bus interface can generate. This parameter is ignored when the IP is connected to an interconnect in SASD mode., AXI_VER = 1.01.a, BUS_TYPE = MASTER, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), DT = integer, RANGE = (1, 2, 4, 8, 16, 32), BUS = M_AXI_DC:M_ACE_DC, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_DC_READ_ISSUING = 2, ASSOCIATION = MASTER, DESC = Read Transaction Issuance Limit, LONG_DESC = Maximum number of active read transactions that the bus interface can generate. This parameter is ignored when the IP is connected to an interconnect in SASD mode., AXI_VER = 1.01.a, BUS_TYPE = MASTER, ISVALID = (C_INTERCONNECT == 2 && C_USE_DCACHE == 1), DT = integer, RANGE = (1, 2), BUS = M_AXI_DC:M_ACE_DC, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_ADDED_AXI_PARAMS = TRUE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_M_AXI_DC_AXI_VER = 1.01.a, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_INTERCONNECT_M_AXI_IC_BASE_ID = 0x00, DT = std_logic_vector, TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Unique Master ID, LONG_DESC = The unique master ID of the master interface. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BITWIDTH = 8, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0x00, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_IS_ACLK_ASYNC = 0, DT = integer, RANGE = (0, 1), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Is ACLK Asynchronous to Interconnect_ACLK, LONG_DESC = Is ACLK asynchronous with respect to the interconnect's ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_ACLK_RATIO = 1, DT = integer, TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = UPDATE, DESC = ACLK Frequency Ratio, LONG_DESC = In relation to C_INTERCONNECT_ACLK_RATIO on the interconnect, indicates the ratio of the ACLK frequency of this bus interface to the frequency of Interconnect_ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_ARB_PRIORITY = 0, DT = integer, RANGE = (0:15), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Arbitration Priority, LONG_DESC = Arbitration priority. Higher values indicate higher priority. Round-robin arbitration is used among all masters with priority value 0, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_AW_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AW channel, LONG_DESC = Insert register slice on AW channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_AR_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AR channel, LONG_DESC = Insert register slice on AR channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_W_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on W channel, LONG_DESC = Insert register slice on W channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_R_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on R channel, LONG_DESC = Insert register slice on R channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_B_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Use register slice on B channel, LONG_DESC = Insert register slice on B channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_WRITE_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Write Data FIFO Depth, LONG_DESC = Depth of bus interface write data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_READ_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL, DESC = Read Data FIFO Depth, LONG_DESC = Depth of bus interface read data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_WRITE_ISSUING = 1, DT = integer, RANGE = (1, 2, 4, 8, 16, 32), TYPE = NON_MPD, ASSOCIATION = MASTER, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Write Transaction Issuance Limit, LONG_DESC = Maximum number of active write transactions that the bus interface can generate. This parameter is ignored when the IP is connected to an interconnect in SASD mode., GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = M_AXI_IC, AXI_VER = 1.01.a, BUS_TYPE = MASTER, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_M_AXI_IC_READ_ISSUING = 2, ASSOCIATION = MASTER, DESC = Read Transaction Issuance Limit, LONG_DESC = Maximum number of active read transactions that the bus interface can generate. This parameter is ignored when the IP is connected to an interconnect in SASD mode., AXI_VER = 1.01.a, BUS_TYPE = MASTER, ISVALID = (C_INTERCONNECT == 2 && C_USE_ICACHE == 1), DT = integer, RANGE = (1, 2, 4, 8), BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = NON_HDL, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_m_axi_ic_read_issuing, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_ADDED_AXI_PARAMS = TRUE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_M_AXI_IC_AXI_VER = 1.01.a, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_SCO = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_FREQ = 0, DT = integer, IO_IS = clk_freq, CLK_PORT = CLK, CLK_UNIT = HZ, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_DATA_SIZE = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_DYNAMIC_BUS_SIZING = 1, DT = integer, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_FAMILY = virtex5, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_INSTANCE = microblaze, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = microblaze
 PARAMETER C_AVOID_PRIMITIVES = 0, DT = integer, RANGE = (0:3), VALUES = (0=NONE, 1=SRL16, 2=LUTRAM, 3=BOTH), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_FAULT_TOLERANT = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_fault_tolerant, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_ECC_USE_CE_EXCEPTION:C_ICACHE_DATA_WIDTH:C_DCACHE_USE_WRITEBACK:C_DCACHE_DATA_WIDTH, MPD_VALUE = 0
 PARAMETER C_ECC_USE_CE_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FAULT_TOLERANT == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_LOCKSTEP_SLAVE = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ENDIANNESS = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL_UPDATE, VALUES = (0=BIG, 1=LITTLE), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_endianness, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_AREA_OPTIMIZED = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT != 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_USE_STACK_PROTECTION:C_ICACHE_VICTIMS:C_ICACHE_STREAMS:C_ICACHE_DATA_WIDTH:C_DCACHE_VICTIMS:C_DCACHE_DATA_WIDTH:C_USE_MMU:C_MMU_DTLB_SIZE:C_MMU_ITLB_SIZE:C_MMU_TLB_ACCESS:C_MMU_ZONES:C_MMU_PRIVILEGED_INSTR:C_USE_BRANCH_TARGET_CACHE:C_BRANCH_TARGET_CACHE_SIZE, MPD_VALUE = 0
 PARAMETER C_OPTIMIZATION = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_INTERCONNECT = 1, DT = integer, RANGE = (1:3), VALUES = (1=PLBv46, 2=AXI, 3=ACE), AFFECTS_PORTS_VEC = M_AXI_IC_RRESP:M_AXI_DC_RRESP, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_AREA_OPTIMIZED:C_M_AXI_DP_EXCLUSIVE_ACCESS:C_M_AXI_I_BUS_EXCEPTION:C_M_AXI_D_BUS_EXCEPTION:C_IPLB_BUS_EXCEPTION:C_DPLB_BUS_EXCEPTION:C_ICACHE_INTERFACE:C_ICACHE_VICTIMS:C_ICACHE_STREAMS:C_ICACHE_DATA_WIDTH:C_M_AXI_IC_USER_VALUE:C_DCACHE_INTERFACE:C_DCACHE_USE_WRITEBACK:C_DCACHE_DATA_WIDTH:C_M_AXI_DC_EXCLUSIVE_ACCESS:C_M_AXI_DC_USER_VALUE, MPD_VALUE = 1
 PARAMETER C_STREAM_INTERCONNECT = 0, DT = integer, RANGE = (0,1), VALUES = (0=FSL, 1=AXI), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_BASE_VECTORS = 0x00000000, DT = std_logic_vector, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000
 PARAMETER C_DPLB_DWIDTH = 32, DT = integer, RANGE = (32,64,128), BUS = DPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = DPLB_M_BE:DPLB_M_wrDBus:DPLB_MRdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = DPLB
 PARAMETER C_DPLB_NATIVE_DWIDTH = 32, DT = integer, RANGE = (32:32), ASSIGNMENT = CONSTANT, BUS = DPLB, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = DPLB
 PARAMETER C_DPLB_BURST_EN = 0, DT = integer, RANGE = (0:0), ASSIGNMENT = CONSTANT, BUS = DPLB, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = DPLB
 PARAMETER C_DPLB_P2P = 0, DT = integer, RANGE = (0:1), BUS = DPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = DPLB
 PARAMETER C_IPLB_DWIDTH = 32, DT = integer, RANGE = (32,64,128), BUS = IPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = IPLB_M_BE:IPLB_M_wrDBus:IPLB_MRdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = IPLB
 PARAMETER C_IPLB_NATIVE_DWIDTH = 32, DT = integer, RANGE = (32:32), ASSIGNMENT = CONSTANT, BUS = IPLB, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = IPLB
 PARAMETER C_IPLB_BURST_EN = 0, DT = integer, RANGE = (0:0), ASSIGNMENT = CONSTANT, BUS = IPLB, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = IPLB
 PARAMETER C_IPLB_P2P = 0, DT = integer, RANGE = (0:1), BUS = IPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = IPLB
 PARAMETER C_M_AXI_DP_SUPPORTS_THREADS = 0, DT = integer, BUS = M_AXI_DP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_THREAD_ID_WIDTH = 1, DT = integer, BUS = M_AXI_DP, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DP_AWID:M_AXI_DP_BID:M_AXI_DP_ARID:M_AXI_DP_RID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_SUPPORTS_READ = 1, DT = integer, BUS = M_AXI_DP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_SUPPORTS_WRITE = 1, DT = integer, BUS = M_AXI_DP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_SUPPORTS_NARROW_BURST = 0, DT = integer, BUS = M_AXI_DP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_DATA_WIDTH = 32, DT = integer, RANGE = (32), BUS = M_AXI_DP, AFFECTS_PORTS_VEC = M_AXI_DP_WDATA:M_AXI_DP_WSTRB:M_AXI_DP_RDATA, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_ADDR_WIDTH = 32, DT = integer, RANGE = (32), BUS = M_AXI_DP, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DP_AWADDR:M_AXI_DP_ARADDR, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_PROTOCOL = AXI4LITE, DT = string, TYPE = NON_HDL, ASSIGNMENT = UPDATE, BUS = M_AXI_DP, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_m_axi_dp_protocol, GUI_PERMIT = , MPD_VALUE = AXI4LITE, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DP_EXCLUSIVE_ACCESS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT >= 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_M_AXI_IP_SUPPORTS_THREADS = 0, DT = integer, BUS = M_AXI_IP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IP_THREAD_ID_WIDTH = 1, DT = integer, BUS = M_AXI_IP, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IP_AWID:M_AXI_IP_BID:M_AXI_IP_ARID:M_AXI_IP_RID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IP_SUPPORTS_READ = 1, DT = integer, BUS = M_AXI_IP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IP_SUPPORTS_WRITE = 0, DT = integer, BUS = M_AXI_IP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IP_SUPPORTS_NARROW_BURST = 0, DT = integer, BUS = M_AXI_IP, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IP_DATA_WIDTH = 32, DT = integer, RANGE = (32), BUS = M_AXI_IP, AFFECTS_PORTS_VEC = M_AXI_IP_WDATA:M_AXI_IP_WSTRB:M_AXI_IP_RDATA, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IP_ADDR_WIDTH = 32, DT = integer, RANGE = (32), BUS = M_AXI_IP, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IP_AWADDR:M_AXI_IP_ARADDR, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IP_PROTOCOL = AXI4LITE, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M_AXI_IP, GUI_PERMIT = , MPD_VALUE = AXI4LITE, RESOLVED_BUS = 
 PARAMETER C_D_AXI = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_axi, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_D_PLB = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_plb, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_D_LMB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_lmb, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_I_AXI = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_axi, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_I_PLB = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_plb, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_I_LMB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_lmb, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_USE_MSR_INSTR = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_USE_PCMP_INSTR = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_USE_BARREL = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 1
 PARAMETER C_USE_DIV = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_DIV_ZERO_EXCEPTION, MPD_VALUE = 0
 PARAMETER C_USE_HW_MUL = 1, DT = integer, VALUES = (0= NONE, 1= MUL32, 2= MUL64), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_USE_FPU = 0, DT = integer, VALUES = (0= NONE, 1= BASIC, 2= EXTENDED), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_FPU_EXCEPTION, MPD_VALUE = 0
 PARAMETER C_USE_REORDER_INSTR = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_UNALIGNED_EXCEPTIONS = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ILL_OPCODE_EXCEPTION = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_M_AXI_I_BUS_EXCEPTION = 0, DT = integer, RANGE = (0,1), ISVALID = (C_INTERCONNECT >= 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_M_AXI_D_BUS_EXCEPTION = 0, DT = integer, RANGE = (0,1), ISVALID = (C_INTERCONNECT >= 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_IPLB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DPLB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DIV_ZERO_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_DIV == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_FPU_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_FPU >= 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_FSL_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FSL_LINKS >= 1 && C_USE_EXTENDED_FSL_INSTR >= 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_USE_STACK_PROTECTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_MMU == 0 || C_AREA_OPTIMIZED == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_PVR = 0, DT = integer, VALUES = (0= NONE, 1= BASIC, 2= FULL), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_PVR_USER1 = 0x00, DT = std_logic_vector(0 to 7), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 8, MPD_VALUE = 0x00
 PARAMETER C_PVR_USER2 = 0x00000000, DT = std_logic_vector(0 to 31), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000
 PARAMETER C_DEBUG_ENABLED = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 1
 PARAMETER C_NUMBER_OF_PC_BRK = 1, DT = integer, RANGE = (0:8), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 1
 PARAMETER C_NUMBER_OF_RD_ADDR_BRK = 0, DT = integer, RANGE = (0:4), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_NUMBER_OF_WR_ADDR_BRK = 0, DT = integer, RANGE = (0:4), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_INTERRUPT_IS_EDGE = 0, DT = integer, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_interrupt_edge, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_EDGE_IS_POSITIVE = 1, DT = integer, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_edge_positive, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_RESET_MSR = 0x00000000, DT = std_logic_vector, VALUES = (0x0000= NONE, 0x0020= ICE, 0x0080= DCE, 0x00a0= ICE_DCE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000
 PARAMETER C_OPCODE_0x0_ILLEGAL = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_FSL_LINKS = 0, DT = integer, RANGE = (0:16), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_FSL_EXCEPTION:C_USE_EXTENDED_FSL_INSTR, MPD_VALUE = 0
 PARAMETER C_FSL_DATA_SIZE = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = FSL0_S_DATA:FSL0_M_DATA:FSL1_S_DATA:FSL1_M_DATA:FSL2_S_DATA:FSL2_M_DATA:FSL3_S_DATA:FSL3_M_DATA:FSL4_S_DATA:FSL4_M_DATA:FSL5_S_DATA:FSL5_M_DATA:FSL6_S_DATA:FSL6_M_DATA:FSL7_S_DATA:FSL7_M_DATA:FSL8_S_DATA:FSL8_M_DATA:FSL9_S_DATA:FSL9_M_DATA:FSL10_S_DATA:FSL10_M_DATA:FSL11_S_DATA:FSL11_M_DATA:FSL12_S_DATA:FSL12_M_DATA:FSL13_S_DATA:FSL13_M_DATA:FSL14_S_DATA:FSL14_M_DATA:FSL15_S_DATA:FSL15_M_DATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_USE_EXTENDED_FSL_INSTR = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FSL_LINKS >= 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_FSL_EXCEPTION, MPD_VALUE = 0
 PARAMETER C_M0_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M0_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S0_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S0_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M1_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M1_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S1_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S1_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M2_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M2_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S2_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S2_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M3_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M3_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S3_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S3_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M4_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M4_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S4_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S4_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M5_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M5_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S5_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S5_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M6_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M6_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S6_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S6_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M7_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M7_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S7_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S7_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M8_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M8_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S8_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S8_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M9_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M9_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S9_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S9_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M10_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M10_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S10_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S10_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M11_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M11_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S11_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S11_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M12_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M12_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S12_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S12_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M13_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M13_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S13_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S13_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M14_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M14_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S14_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S14_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M15_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M15_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_S15_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S15_AXIS, GUI_PERMIT = , MPD_VALUE = GENERIC, RESOLVED_BUS = 
 PARAMETER C_M0_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M0_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S0_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S0_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M1_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M1_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S1_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S1_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M2_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M2_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S2_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S2_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M3_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M3_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S3_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S3_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M4_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M4_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S4_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S4_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M5_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M5_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S5_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S5_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M6_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M6_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S6_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S6_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M7_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M7_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S7_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S7_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M8_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M8_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S8_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S8_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M9_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M9_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S9_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S9_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M10_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M10_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S10_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S10_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M11_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M11_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S11_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S11_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M12_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M12_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S12_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S12_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M13_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M13_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S13_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S13_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M14_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M14_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S14_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S14_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_M15_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M15_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_S15_AXIS_DATA_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = S15_AXIS_TDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_ICACHE_BASEADDR = 0x00000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_baseaddr, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000
 PARAMETER C_ICACHE_HIGHADDR = 0x3FFFFFFF, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_highaddr, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x3FFFFFFF
 PARAMETER C_USE_ICACHE = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ALLOW_ICACHE_WR = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_ADDR_TAG_BITS = 17, DT = integer, RANGE = (0:25), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_tag_bits, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 17
 PARAMETER C_CACHE_BYTE_SIZE = 8192, DT = integer, VALUES = (64= 64B, 128= 128B, 256= 256B, 512= 512B, 1024= 1kB, 2048= 2kB,4096= 4kB,8192= 8kB,16384= 16kB,32768= 32kB,65536= 64kB), RANGE = (64,128,256,512,1024,2048,4096,8192,16384,32768,65536), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_ICACHE_FORCE_TAG_LUTRAM:C_ICACHE_DATA_WIDTH, MPD_VALUE = 8192
 PARAMETER C_ICACHE_USE_FSL = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_cache_use_fsl, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_ICACHE_LINE_LEN = 4, DT = integer, RANGE = (4, 8), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_ICACHE_FORCE_TAG_LUTRAM:C_ICACHE_DATA_WIDTH, MPD_VALUE = 4
 PARAMETER C_ICACHE_ALWAYS_USED = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ICACHE_INTERFACE = 0, DT = integer, RANGE = (0,1), VALUES = (0=IXCL, 1=IXCL2), ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ICACHE_VICTIMS = 0, DT = integer, RANGE = (0,2,4,8), ISVALID = (C_AREA_OPTIMIZED != 1 && C_INTERCONNECT != 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ICACHE_STREAMS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_AREA_OPTIMIZED != 1 && C_INTERCONNECT != 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ICACHE_FORCE_TAG_LUTRAM = 0, DT = integer, RANGE = (0:1), ISVALID = (C_CACHE_BYTE_SIZE <= (2048 * C_ICACHE_LINE_LEN)), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ICACHE_DATA_WIDTH = 0, DT = integer, RANGE = (0:2), VALUES = (0=32-bit, 1=Full Cacheline, 2=512-bit), ISVALID = (C_AREA_OPTIMIZED != 1 && C_INTERCONNECT >= 2 && C_FAULT_TOLERANT == 0 && C_CACHE_BYTE_SIZE >= (2048 * C_ICACHE_LINE_LEN)), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_M_AXI_IC_SUPPORTS_THREADS = 0, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = UPDATE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_m_axi_ic_supports_threads, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_THREAD_ID_WIDTH = 1, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IC_AWID:M_AXI_IC_BID:M_AXI_IC_ARID:M_AXI_IC_RID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_SUPPORTS_READ = 1, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_SUPPORTS_WRITE = 0, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_SUPPORTS_NARROW_BURST = 0, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_DATA_WIDTH = 32, DT = integer, RANGE = (32, 128, 256, 512), BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_m_axi_ic_data_width, AFFECTS_PORTS_VEC = M_AXI_IC_WDATA:M_AXI_IC_WSTRB:M_AXI_IC_RDATA:M_AXI_IC_CDDATA, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_ADDR_WIDTH = 32, DT = integer, RANGE = (32), BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IC_AWADDR:M_AXI_IC_ARADDR:M_AXI_IC_ACADDR, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_PROTOCOL = AXI4, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M_AXI_IC:M_ACE_IC, GUI_PERMIT = , MPD_VALUE = AXI4, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_USER_VALUE = 0b11111, DT = integer, RANGE = (0:31), ISVALID = (C_INTERCONNECT >= 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0b11111
 PARAMETER C_M_AXI_IC_SUPPORTS_USER_SIGNALS = 1, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_AWUSER_WIDTH = 5, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IC_AWUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 5, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_ARUSER_WIDTH = 5, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IC_ARUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 5, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_WUSER_WIDTH = 1, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IC_WUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_RUSER_WIDTH = 1, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IC_RUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_IC_BUSER_WIDTH = 1, DT = integer, BUS = M_AXI_IC:M_ACE_IC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_IC_BUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_DCACHE_BASEADDR = 0x00000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_baseaddr, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000
 PARAMETER C_DCACHE_HIGHADDR = 0x3FFFFFFF, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_highaddr, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x3FFFFFFF
 PARAMETER C_USE_DCACHE = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ALLOW_DCACHE_WR = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCACHE_ADDR_TAG = 17, DT = integer, RANGE = (0:25), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_tag_bits, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 17
 PARAMETER C_DCACHE_BYTE_SIZE = 8192, DT = integer, VALUES = (64= 64B, 128= 128B, 256= 256B, 512= 512B, 1024= 1kB, 2048= 2kB,4096= 4kB,8192= 8kB,16384= 16kB,32768= 32kB,65536= 64kB), RANGE = (64,128,256,512,1024,2048,4096,8192,16384,32768,65536), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_DCACHE_FORCE_TAG_LUTRAM:C_DCACHE_DATA_WIDTH, MPD_VALUE = 8192
 PARAMETER C_DCACHE_USE_FSL = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_cache_use_fsl, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCACHE_LINE_LEN = 4, DT = integer, RANGE = (4, 8), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_DCACHE_FORCE_TAG_LUTRAM:C_DCACHE_DATA_WIDTH, MPD_VALUE = 4
 PARAMETER C_DCACHE_ALWAYS_USED = 0, DT = integer, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DCACHE_INTERFACE = 0, DT = integer, RANGE = (0,1), VALUES = (0=DXCL, 1=DXCL2), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_dcache_interface, ISVALID = (C_INTERCONNECT == 1), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DCACHE_USE_WRITEBACK = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FAULT_TOLERANT == 0 && C_INTERCONNECT != 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_DCACHE_VICTIMS:C_DCACHE_DATA_WIDTH, MPD_VALUE = 0
 PARAMETER C_DCACHE_VICTIMS = 0, DT = integer, RANGE = (0,2,4,8), ISVALID = (C_AREA_OPTIMIZED != 1 && C_DCACHE_USE_WRITEBACK == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DCACHE_FORCE_TAG_LUTRAM = 0, DT = integer, RANGE = (0:1), ISVALID = (C_DCACHE_BYTE_SIZE <= (2048 * C_DCACHE_LINE_LEN)), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DCACHE_DATA_WIDTH = 0, DT = integer, RANGE = (0:2), VALUES = (0=32-bit, 1=Full Cacheline, 2=512-bit), ISVALID = (C_AREA_OPTIMIZED != 1 && C_INTERCONNECT >= 2 && C_FAULT_TOLERANT == 0 && C_DCACHE_USE_WRITEBACK == 1 && C_DCACHE_BYTE_SIZE >= (2048 * C_DCACHE_LINE_LEN)), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_M_AXI_DC_SUPPORTS_THREADS = 0, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = UPDATE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_m_axi_dc_supports_threads, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_THREAD_ID_WIDTH = 1, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DC_AWID:M_AXI_DC_BID:M_AXI_DC_ARID:M_AXI_DC_RID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_SUPPORTS_READ = 1, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_SUPPORTS_WRITE = 1, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_SUPPORTS_NARROW_BURST = 0, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_DATA_WIDTH = 32, DT = integer, RANGE = (32, 128, 256, 512), BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_m_axi_dc_data_width, AFFECTS_PORTS_VEC = M_AXI_DC_WDATA:M_AXI_DC_WSTRB:M_AXI_DC_RDATA:M_AXI_DC_CDDATA, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_ADDR_WIDTH = 32, DT = integer, RANGE = (32), BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DC_AWADDR:M_AXI_DC_ARADDR:M_AXI_DC_ACADDR, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_PROTOCOL = AXI4, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M_AXI_DC:M_ACE_DC, GUI_PERMIT = , MPD_VALUE = AXI4, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_EXCLUSIVE_ACCESS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT >= 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_M_AXI_DC_USER_VALUE = 0b11111, DT = integer, RANGE = (0:31), ISVALID = (C_INTERCONNECT >= 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0b11111
 PARAMETER C_M_AXI_DC_SUPPORTS_USER_SIGNALS = 1, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_AWUSER_WIDTH = 5, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DC_AWUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 5, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_ARUSER_WIDTH = 5, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DC_ARUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 5, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_WUSER_WIDTH = 1, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DC_WUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_RUSER_WIDTH = 1, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DC_RUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_M_AXI_DC_BUSER_WIDTH = 1, DT = integer, BUS = M_AXI_DC:M_ACE_DC, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_AXI_DC_BUSER, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_USE_MMU = 0, DT = integer, VALUES = (0= NONE, 1=USERMODE, 2=PROTECTION, 3=VIRTUAL), ISVALID = (C_AREA_OPTIMIZED == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_USE_STACK_PROTECTION:C_MMU_DTLB_SIZE:C_MMU_ITLB_SIZE:C_MMU_TLB_ACCESS:C_MMU_ZONES:C_MMU_PRIVILEGED_INSTR, MPD_VALUE = 0
 PARAMETER C_MMU_DTLB_SIZE = 4, DT = integer, VALUES = (1= 1, 2= 2, 4= 4, 8= 8), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 4
 PARAMETER C_MMU_ITLB_SIZE = 2, DT = integer, VALUES = (1= 1, 2= 2, 4= 4, 8= 8), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2
 PARAMETER C_MMU_TLB_ACCESS = 3, DT = integer, VALUES = (0=MINIMAL, 1=READ, 2=WRITE, 3=FULL), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3
 PARAMETER C_MMU_ZONES = 16, DT = integer, RANGE = (0:16), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 16
 PARAMETER C_MMU_PRIVILEGED_INSTR = 0, DT = integer, VALUES = (0=FULL_PROTECTION, 1=ALLOW_STREAM_INSTR), ISVALID = (C_USE_MMU >= 1 && C_AREA_OPTIMIZED == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_USE_INTERRUPT = 0, DT = integer, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_interrupt, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_USE_EXT_BRK = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_ext_brk, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_USE_EXT_NM_BRK = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_ext_nm_brk, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_USE_BRANCH_TARGET_CACHE = 0, DT = integer, RANGE = (0:1), ISVALID = (C_AREA_OPTIMIZED == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_BRANCH_TARGET_CACHE_SIZE = 0, DT = integer, VALUES = (0=DEFAULT, 1=   8 ENTRIES, 2=  16 ENTRIES, 3=  32 ENTRIES, 4=  64 ENTRIES, 5= 512 ENTRIES, 6=1024 ENTRIES, 7=2048 ENTRIES), ISVALID = (C_AREA_OPTIMIZED == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_PC_WIDTH = 32, DT = integer, RANGE = (4:32), ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pc_width, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32
 PARAMETER HW_VER = 8.50.c
 BUS_INTERFACE DLMB = dlmb, BUS_STD = LMB, BUS_TYPE = MASTER, SHARES_ADDR = DPLB
 BUS_INTERFACE ILMB = ilmb, BUS_STD = LMB, BUS_TYPE = MASTER, SHARES_ADDR = IPLB
 BUS_INTERFACE DPLB = mb_plb, BUS_STD = PLBV46, BUS_TYPE = MASTER, SHARES_ADDR = DLMB, ISVALID = (C_INTERCONNECT == 1)
 BUS_INTERFACE IPLB = mb_plb, BUS_STD = PLBV46, BUS_TYPE = MASTER, SHARES_ADDR = ILMB, ISVALID = (C_INTERCONNECT == 1)
 BUS_INTERFACE DEBUG = microblaze_0_mdm_bus, BUS_STD = XIL_MBDEBUG3, BUS_TYPE = TARGET
 PORT RESET = LMB_Rst, DIR = I, SIGIS = RST, BUS = DLMB:ILMB, DEFAULT = LMB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB:ILMB
 PORT MB_RESET = mb_reset, DIR = I, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = mb_reset
 PORT INTERRUPT = microblaze_0_Interrupt, DIR = I, LEVEL = HIGH, SIGIS = INTERRUPT, BUS = INTERRUPT, DEFAULT = Interrupt, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SENSITIVITY = LEVEL_HIGH, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = microblaze_0_Interrupt, RESOLVED_BUS = 
 PORT INTERRUPT_ADDRESS = Interrupt_Address, DIR = I, VEC = [0:31], BUS = INTERRUPT, DEFAULT = Interrupt_Address, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT INTERRUPT_ACK = Interrupt_Ack, DIR = O, VEC = [0:1], BUS = INTERRUPT, DEFAULT = Interrupt_Ack, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT EXT_BRK = Ext_BRK, DIR = I, DEFAULT = Ext_BRK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT EXT_NM_BRK = Ext_NM_BRK, DIR = I, DEFAULT = Ext_NM_BRK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT INSTR = LMB_ReadDBus, DIR = I, VEC = [0:31], BUS = ILMB, DEFAULT = LMB_ReadDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = ILMB
 PORT IREADY = LMB_Ready, DIR = I, BUS = ILMB, DEFAULT = LMB_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = ILMB
 PORT IWAIT = LMB_Wait, DIR = I, BUS = ILMB, DEFAULT = LMB_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = ILMB
 PORT ICE = LMB_CE, DIR = I, BUS = ILMB, DEFAULT = LMB_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = ILMB
 PORT IUE = LMB_UE, DIR = I, BUS = ILMB, DEFAULT = LMB_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = ILMB
 PORT INSTR_ADDR = M_ABus, DIR = O, VEC = [0:31], BUS = ILMB, DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = ILMB
 PORT IFETCH = M_ReadStrobe, DIR = O, BUS = ILMB, DEFAULT = M_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = ILMB
 PORT I_AS = M_AddrStrobe, DIR = O, BUS = ILMB, DEFAULT = M_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = ILMB
 PORT IPLB_M_ABort = M_ABort, DIR = O, BUS = IPLB, DEFAULT = M_ABort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = IPLB, DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = IPLB, DEFAULT = M_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_BE = M_BE, DIR = O, VEC = [0:(C_IPLB_DWIDTH-1)/8], BUS = IPLB, DEFAULT = M_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_busLock = M_busLock, DIR = O, BUS = IPLB, DEFAULT = M_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_lockErr = M_lockErr, DIR = O, BUS = IPLB, DEFAULT = M_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = IPLB, DEFAULT = M_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_priority = M_priority, DIR = O, VEC = [0:1], BUS = IPLB, DEFAULT = M_priority, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_rdBurst = M_rdBurst, DIR = O, BUS = IPLB, DEFAULT = M_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_request = M_request, DIR = O, BUS = IPLB, DEFAULT = M_request, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_RNW = M_RNW, DIR = O, BUS = IPLB, DEFAULT = M_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_size = M_size, DIR = O, VEC = [0:3], BUS = IPLB, DEFAULT = M_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = IPLB, DEFAULT = M_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_type = M_type, DIR = O, VEC = [0:2], BUS = IPLB, DEFAULT = M_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_wrBurst = M_wrBurst, DIR = O, BUS = IPLB, DEFAULT = M_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_M_wrDBus = M_wrDBus, DIR = O, VEC = [0:C_IPLB_DWIDTH-1], BUS = IPLB, DEFAULT = M_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MBusy = PLB_MBusy, DIR = I, BUS = IPLB, DEFAULT = PLB_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = IPLB, DEFAULT = PLB_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = IPLB, DEFAULT = PLB_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = IPLB, DEFAULT = PLB_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = IPLB, DEFAULT = PLB_MWrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = IPLB, DEFAULT = PLB_MWrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = IPLB, DEFAULT = PLB_MAddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = IPLB, DEFAULT = PLB_MRdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = IPLB, DEFAULT = PLB_MRdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:C_IPLB_DWIDTH-1], BUS = IPLB, DEFAULT = PLB_MRdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = IPLB, DEFAULT = PLB_MRdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = IPLB, DEFAULT = PLB_MRearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = IPLB, DEFAULT = PLB_MSSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT IPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = IPLB, DEFAULT = PLB_MTimeout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = IPLB
 PORT DATA_READ = LMB_ReadDBus, DIR = I, VEC = [0:31], BUS = DLMB, DEFAULT = LMB_ReadDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT DREADY = LMB_Ready, DIR = I, BUS = DLMB, DEFAULT = LMB_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT DWAIT = LMB_Wait, DIR = I, BUS = DLMB, DEFAULT = LMB_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT DCE = LMB_CE, DIR = I, BUS = DLMB, DEFAULT = LMB_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT DUE = LMB_UE, DIR = I, BUS = DLMB, DEFAULT = LMB_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT DATA_WRITE = M_DBus, DIR = O, VEC = [0:31], BUS = DLMB, DEFAULT = M_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT DATA_ADDR = M_ABus, DIR = O, VEC = [0:31], BUS = DLMB, DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT D_AS = M_AddrStrobe, DIR = O, BUS = DLMB, DEFAULT = M_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT READ_STROBE = M_ReadStrobe, DIR = O, BUS = DLMB, DEFAULT = M_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT WRITE_STROBE = M_WriteStrobe, DIR = O, BUS = DLMB, DEFAULT = M_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT BYTE_ENABLE = M_BE, DIR = O, VEC = [0:3], BUS = DLMB, DEFAULT = M_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DLMB
 PORT DPLB_M_ABort = M_ABort, DIR = O, BUS = DPLB, DEFAULT = M_ABort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = DPLB, DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = DPLB, DEFAULT = M_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_BE = M_BE, DIR = O, VEC = [0:(C_DPLB_DWIDTH-1)/8], BUS = DPLB, DEFAULT = M_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_busLock = M_busLock, DIR = O, BUS = DPLB, DEFAULT = M_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_lockErr = M_lockErr, DIR = O, BUS = DPLB, DEFAULT = M_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = DPLB, DEFAULT = M_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_priority = M_priority, DIR = O, VEC = [0:1], BUS = DPLB, DEFAULT = M_priority, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_rdBurst = M_rdBurst, DIR = O, BUS = DPLB, DEFAULT = M_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_request = M_request, DIR = O, BUS = DPLB, DEFAULT = M_request, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_RNW = M_RNW, DIR = O, BUS = DPLB, DEFAULT = M_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_size = M_size, DIR = O, VEC = [0:3], BUS = DPLB, DEFAULT = M_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = DPLB, DEFAULT = M_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_type = M_type, DIR = O, VEC = [0:2], BUS = DPLB, DEFAULT = M_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_wrBurst = M_wrBurst, DIR = O, BUS = DPLB, DEFAULT = M_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_M_wrDBus = M_wrDBus, DIR = O, VEC = [0:C_DPLB_DWIDTH-1], BUS = DPLB, DEFAULT = M_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MBusy = PLB_MBusy, DIR = I, BUS = DPLB, DEFAULT = PLB_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = DPLB, DEFAULT = PLB_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = DPLB, DEFAULT = PLB_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = DPLB, DEFAULT = PLB_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = DPLB, DEFAULT = PLB_MWrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = DPLB, DEFAULT = PLB_MWrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = DPLB, DEFAULT = PLB_MAddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = DPLB, DEFAULT = PLB_MRdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = DPLB, DEFAULT = PLB_MRdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:C_DPLB_DWIDTH-1], BUS = DPLB, DEFAULT = PLB_MRdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = DPLB, DEFAULT = PLB_MRdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = DPLB, DEFAULT = PLB_MRearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = DPLB, DEFAULT = PLB_MSSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT DPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = DPLB, DEFAULT = PLB_MTimeout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DPLB
 PORT M_AXI_IP_AWID = AWID, DIR = O, VEC = [(C_M_AXI_IP_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = AWID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWADDR = AWADDR, DIR = O, VEC = [(C_M_AXI_IP_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = AWADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWLEN = AWLEN, DIR = O, VEC = [7:0], BUS = M_AXI_IP, DEFAULT = AWLEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWSIZE = AWSIZE, DIR = O, VEC = [2:0], BUS = M_AXI_IP, DEFAULT = AWSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWBURST = AWBURST, DIR = O, VEC = [1:0], BUS = M_AXI_IP, DEFAULT = AWBURST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWLOCK = AWLOCK, DIR = O, BUS = M_AXI_IP, DEFAULT = AWLOCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWCACHE = AWCACHE, DIR = O, VEC = [3:0], BUS = M_AXI_IP, DEFAULT = AWCACHE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWPROT = AWPROT, DIR = O, VEC = [2:0], BUS = M_AXI_IP, DEFAULT = AWPROT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWQOS = AWQOS, DIR = O, VEC = [3:0], BUS = M_AXI_IP, DEFAULT = AWQOS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWVALID = AWVALID, DIR = O, BUS = M_AXI_IP, DEFAULT = AWVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_AWREADY = AWREADY, DIR = I, BUS = M_AXI_IP, DEFAULT = AWREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_WDATA = WDATA, DIR = O, VEC = [(C_M_AXI_IP_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = WDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_WSTRB = WSTRB, DIR = O, VEC = [((C_M_AXI_IP_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = WSTRB, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_WLAST = WLAST, DIR = O, BUS = M_AXI_IP, DEFAULT = WLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_WVALID = WVALID, DIR = O, BUS = M_AXI_IP, DEFAULT = WVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_WREADY = WREADY, DIR = I, BUS = M_AXI_IP, DEFAULT = WREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_BID = BID, DIR = I, VEC = [(C_M_AXI_IP_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = BID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_BRESP = BRESP, DIR = I, VEC = [1:0], BUS = M_AXI_IP, DEFAULT = BRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_BVALID = BVALID, DIR = I, BUS = M_AXI_IP, DEFAULT = BVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_BREADY = BREADY, DIR = O, BUS = M_AXI_IP, DEFAULT = BREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARID = ARID, DIR = O, VEC = [(C_M_AXI_IP_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = ARID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARADDR = ARADDR, DIR = O, VEC = [(C_M_AXI_IP_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = ARADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARLEN = ARLEN, DIR = O, VEC = [7:0], BUS = M_AXI_IP, DEFAULT = ARLEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARSIZE = ARSIZE, DIR = O, VEC = [2:0], BUS = M_AXI_IP, DEFAULT = ARSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARBURST = ARBURST, DIR = O, VEC = [1:0], BUS = M_AXI_IP, DEFAULT = ARBURST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARLOCK = ARLOCK, DIR = O, BUS = M_AXI_IP, DEFAULT = ARLOCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARCACHE = ARCACHE, DIR = O, VEC = [3:0], BUS = M_AXI_IP, DEFAULT = ARCACHE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARPROT = ARPROT, DIR = O, VEC = [2:0], BUS = M_AXI_IP, DEFAULT = ARPROT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARQOS = ARQOS, DIR = O, VEC = [3:0], BUS = M_AXI_IP, DEFAULT = ARQOS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARVALID = ARVALID, DIR = O, BUS = M_AXI_IP, DEFAULT = ARVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_ARREADY = ARREADY, DIR = I, BUS = M_AXI_IP, DEFAULT = ARREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_RID = RID, DIR = I, VEC = [(C_M_AXI_IP_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = RID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_RDATA = RDATA, DIR = I, VEC = [(C_M_AXI_IP_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IP, DEFAULT = RDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_RRESP = RRESP, DIR = I, VEC = [1:0], BUS = M_AXI_IP, DEFAULT = RRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_RLAST = RLAST, DIR = I, BUS = M_AXI_IP, DEFAULT = RLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_RVALID = RVALID, DIR = I, BUS = M_AXI_IP, DEFAULT = RVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IP_RREADY = RREADY, DIR = O, BUS = M_AXI_IP, DEFAULT = RREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWID = AWID, DIR = O, VEC = [(C_M_AXI_DP_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = AWID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWADDR = AWADDR, DIR = O, VEC = [(C_M_AXI_DP_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = AWADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWLEN = AWLEN, DIR = O, VEC = [7:0], BUS = M_AXI_DP, DEFAULT = AWLEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWSIZE = AWSIZE, DIR = O, VEC = [2:0], BUS = M_AXI_DP, DEFAULT = AWSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWBURST = AWBURST, DIR = O, VEC = [1:0], BUS = M_AXI_DP, DEFAULT = AWBURST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWLOCK = AWLOCK, DIR = O, BUS = M_AXI_DP, DEFAULT = AWLOCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWCACHE = AWCACHE, DIR = O, VEC = [3:0], BUS = M_AXI_DP, DEFAULT = AWCACHE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWPROT = AWPROT, DIR = O, VEC = [2:0], BUS = M_AXI_DP, DEFAULT = AWPROT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWQOS = AWQOS, DIR = O, VEC = [3:0], BUS = M_AXI_DP, DEFAULT = AWQOS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWVALID = AWVALID, DIR = O, BUS = M_AXI_DP, DEFAULT = AWVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_AWREADY = AWREADY, DIR = I, BUS = M_AXI_DP, DEFAULT = AWREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_WDATA = WDATA, DIR = O, VEC = [(C_M_AXI_DP_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = WDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_WSTRB = WSTRB, DIR = O, VEC = [((C_M_AXI_DP_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = WSTRB, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_WLAST = WLAST, DIR = O, BUS = M_AXI_DP, DEFAULT = WLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_WVALID = WVALID, DIR = O, BUS = M_AXI_DP, DEFAULT = WVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_WREADY = WREADY, DIR = I, BUS = M_AXI_DP, DEFAULT = WREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_BID = BID, DIR = I, VEC = [(C_M_AXI_DP_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = BID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_BRESP = BRESP, DIR = I, VEC = [1:0], BUS = M_AXI_DP, DEFAULT = BRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_BVALID = BVALID, DIR = I, BUS = M_AXI_DP, DEFAULT = BVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_BREADY = BREADY, DIR = O, BUS = M_AXI_DP, DEFAULT = BREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARID = ARID, DIR = O, VEC = [(C_M_AXI_DP_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = ARID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARADDR = ARADDR, DIR = O, VEC = [(C_M_AXI_DP_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = ARADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARLEN = ARLEN, DIR = O, VEC = [7:0], BUS = M_AXI_DP, DEFAULT = ARLEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARSIZE = ARSIZE, DIR = O, VEC = [2:0], BUS = M_AXI_DP, DEFAULT = ARSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARBURST = ARBURST, DIR = O, VEC = [1:0], BUS = M_AXI_DP, DEFAULT = ARBURST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARLOCK = ARLOCK, DIR = O, BUS = M_AXI_DP, DEFAULT = ARLOCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARCACHE = ARCACHE, DIR = O, VEC = [3:0], BUS = M_AXI_DP, DEFAULT = ARCACHE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARPROT = ARPROT, DIR = O, VEC = [2:0], BUS = M_AXI_DP, DEFAULT = ARPROT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARQOS = ARQOS, DIR = O, VEC = [3:0], BUS = M_AXI_DP, DEFAULT = ARQOS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARVALID = ARVALID, DIR = O, BUS = M_AXI_DP, DEFAULT = ARVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_ARREADY = ARREADY, DIR = I, BUS = M_AXI_DP, DEFAULT = ARREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_RID = RID, DIR = I, VEC = [(C_M_AXI_DP_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = RID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_RDATA = RDATA, DIR = I, VEC = [(C_M_AXI_DP_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DP, DEFAULT = RDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_RRESP = RRESP, DIR = I, VEC = [1:0], BUS = M_AXI_DP, DEFAULT = RRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_RLAST = RLAST, DIR = I, BUS = M_AXI_DP, DEFAULT = RLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_RVALID = RVALID, DIR = I, BUS = M_AXI_DP, DEFAULT = RVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DP_RREADY = RREADY, DIR = O, BUS = M_AXI_DP, DEFAULT = RREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWID = AWID, DIR = O, VEC = [(C_M_AXI_IC_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWADDR = AWADDR, DIR = O, VEC = [(C_M_AXI_IC_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWLEN = AWLEN, DIR = O, VEC = [7:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWLEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWSIZE = AWSIZE, DIR = O, VEC = [2:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWBURST = AWBURST, DIR = O, VEC = [1:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWBURST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWLOCK = AWLOCK, DIR = O, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWLOCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWCACHE = AWCACHE, DIR = O, VEC = [3:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWCACHE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWPROT = AWPROT, DIR = O, VEC = [2:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWPROT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWQOS = AWQOS, DIR = O, VEC = [3:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWQOS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWVALID = AWVALID, DIR = O, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWREADY = AWREADY, DIR = I, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = AWREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWUSER = AWUSER, DIR = O, VEC = [(C_M_AXI_IC_AWUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC, DEFAULT = AWUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWDOMAIN = AWDOMAIN, DIR = O, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [1:0], DEFAULT = AWDOMAIN, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWSNOOP = AWSNOOP, DIR = O, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [2:0], DEFAULT = AWSNOOP, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_AWBAR = AWBAR, DIR = O, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [1:0], DEFAULT = AWBAR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_WDATA = WDATA, DIR = O, VEC = [(C_M_AXI_IC_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = WDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_WSTRB = WSTRB, DIR = O, VEC = [((C_M_AXI_IC_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = WSTRB, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_WLAST = WLAST, DIR = O, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = WLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_WVALID = WVALID, DIR = O, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = WVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_WREADY = WREADY, DIR = I, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = WREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_WUSER = WUSER, DIR = O, VEC = [(C_M_AXI_IC_WUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC, DEFAULT = WUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_BID = BID, DIR = I, VEC = [(C_M_AXI_IC_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = BID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_BRESP = BRESP, DIR = I, VEC = [1:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = BRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_BVALID = BVALID, DIR = I, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = BVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_BREADY = BREADY, DIR = O, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = BREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_BUSER = BUSER, DIR = I, VEC = [(C_M_AXI_IC_BUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC, DEFAULT = BUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_WACK = WACK, DIR = O, BUS = M_ACE_IC, DEFAULT = WACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARID = ARID, DIR = O, VEC = [(C_M_AXI_IC_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARADDR = ARADDR, DIR = O, VEC = [(C_M_AXI_IC_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARLEN = ARLEN, DIR = O, VEC = [7:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARLEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARSIZE = ARSIZE, DIR = O, VEC = [2:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARBURST = ARBURST, DIR = O, VEC = [1:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARBURST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARLOCK = ARLOCK, DIR = O, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARLOCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARCACHE = ARCACHE, DIR = O, VEC = [3:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARCACHE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARPROT = ARPROT, DIR = O, VEC = [2:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARPROT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARQOS = ARQOS, DIR = O, VEC = [3:0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARQOS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARVALID = ARVALID, DIR = O, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARREADY = ARREADY, DIR = I, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = ARREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARUSER = ARUSER, DIR = O, VEC = [(C_M_AXI_IC_ARUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC, DEFAULT = ARUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARDOMAIN = ARDOMAIN, DIR = O, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [1:0], DEFAULT = ARDOMAIN, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARSNOOP = ARSNOOP, DIR = O, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [3:0], DEFAULT = ARSNOOP, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ARBAR = ARBAR, DIR = O, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [1:0], DEFAULT = ARBAR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_RID = RID, DIR = I, VEC = [(C_M_AXI_IC_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = RID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_RDATA = RDATA, DIR = I, VEC = [(C_M_AXI_IC_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = RDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_RRESP = RRESP, DIR = I, VEC = [1+2*((C_INTERCONNECT-1)/2):0], BUS = M_AXI_IC:M_ACE_IC, DEFAULT = RRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_RLAST = RLAST, DIR = I, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = RLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_RVALID = RVALID, DIR = I, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = RVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_RREADY = RREADY, DIR = O, BUS = M_AXI_IC:M_ACE_IC, DEFAULT = RREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_RUSER = RUSER, DIR = I, VEC = [(C_M_AXI_IC_RUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_IC, ISVALID = (C_M_AXI_IC_SUPPORTS_USER_SIGNALS == 1), DEFAULT = RUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_RACK = RACK, DIR = O, BUS = M_ACE_IC, DEFAULT = RACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ACVALID = ACVALID, DIR = I, BUS = M_ACE_IC, DEFAULT = ACVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ACADDR = ACADDR, DIR = I, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [(C_M_AXI_IC_ADDR_WIDTH-1):0], DEFAULT = ACADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ACSNOOP = ACSNOOP, DIR = I, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [3:0], DEFAULT = ACSNOOP, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ACPROT = ACPROT, DIR = I, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [2:0], DEFAULT = ACPROT, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_ACREADY = ACREADY, DIR = O, BUS = M_ACE_IC, DEFAULT = ACREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_CRREADY = CRREADY, DIR = I, BUS = M_ACE_IC, DEFAULT = CRREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_CRVALID = CRVALID, DIR = O, BUS = M_ACE_IC, DEFAULT = CRVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_CRRESP = CRRESP, DIR = O, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [4:0], DEFAULT = CRRESP, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_CDVALID = CDVALID, DIR = O, BUS = M_ACE_IC, DEFAULT = CDVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_CDREADY = CDREADY, DIR = I, BUS = M_ACE_IC, DEFAULT = CDREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_CDDATA = CDDATA, DIR = O, BUS = M_ACE_IC, ENDIAN = LITTLE, VEC = [(C_M_AXI_IC_DATA_WIDTH-1):0], DEFAULT = CDDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_IC_CDLAST = CDLAST, DIR = O, BUS = M_ACE_IC, DEFAULT = CDLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWID = AWID, DIR = O, VEC = [(C_M_AXI_DC_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWADDR = AWADDR, DIR = O, VEC = [(C_M_AXI_DC_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWLEN = AWLEN, DIR = O, VEC = [7:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWLEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWSIZE = AWSIZE, DIR = O, VEC = [2:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWBURST = AWBURST, DIR = O, VEC = [1:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWBURST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWLOCK = AWLOCK, DIR = O, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWLOCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWCACHE = AWCACHE, DIR = O, VEC = [3:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWCACHE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWPROT = AWPROT, DIR = O, VEC = [2:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWPROT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWQOS = AWQOS, DIR = O, VEC = [3:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWQOS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWVALID = AWVALID, DIR = O, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWREADY = AWREADY, DIR = I, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = AWREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWUSER = AWUSER, DIR = O, VEC = [(C_M_AXI_DC_AWUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC, DEFAULT = AWUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWDOMAIN = AWDOMAIN, DIR = O, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [1:0], DEFAULT = AWDOMAIN, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWSNOOP = AWSNOOP, DIR = O, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [2:0], DEFAULT = AWSNOOP, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_AWBAR = AWBAR, DIR = O, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [1:0], DEFAULT = AWBAR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_WDATA = WDATA, DIR = O, VEC = [(C_M_AXI_DC_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = WDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_WSTRB = WSTRB, DIR = O, VEC = [((C_M_AXI_DC_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = WSTRB, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_WLAST = WLAST, DIR = O, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = WLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_WVALID = WVALID, DIR = O, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = WVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_WREADY = WREADY, DIR = I, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = WREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_WUSER = WUSER, DIR = O, VEC = [(C_M_AXI_DC_WUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC, DEFAULT = WUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_BID = BID, DIR = I, VEC = [(C_M_AXI_DC_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = BID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_BRESP = BRESP, DIR = I, VEC = [1:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = BRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_BVALID = BVALID, DIR = I, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = BVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_BREADY = BREADY, DIR = O, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = BREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_BUSER = BUSER, DIR = I, VEC = [(C_M_AXI_DC_BUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC, DEFAULT = BUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_WACK = WACK, DIR = O, BUS = M_ACE_DC, DEFAULT = WACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARID = ARID, DIR = O, VEC = [(C_M_AXI_DC_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARADDR = ARADDR, DIR = O, VEC = [(C_M_AXI_DC_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARLEN = ARLEN, DIR = O, VEC = [7:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARLEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARSIZE = ARSIZE, DIR = O, VEC = [2:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARBURST = ARBURST, DIR = O, VEC = [1:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARBURST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARLOCK = ARLOCK, DIR = O, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARLOCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARCACHE = ARCACHE, DIR = O, VEC = [3:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARCACHE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARPROT = ARPROT, DIR = O, VEC = [2:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARPROT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARQOS = ARQOS, DIR = O, VEC = [3:0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARQOS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARVALID = ARVALID, DIR = O, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARREADY = ARREADY, DIR = I, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = ARREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARUSER = ARUSER, DIR = O, VEC = [(C_M_AXI_DC_ARUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC, DEFAULT = ARUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARDOMAIN = ARDOMAIN, DIR = O, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [1:0], DEFAULT = ARDOMAIN, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARSNOOP = ARSNOOP, DIR = O, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [3:0], DEFAULT = ARSNOOP, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ARBAR = ARBAR, DIR = O, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [1:0], DEFAULT = ARBAR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_RID = RID, DIR = I, VEC = [(C_M_AXI_DC_THREAD_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = RID, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_RDATA = RDATA, DIR = I, VEC = [(C_M_AXI_DC_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = RDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_RRESP = RRESP, DIR = I, VEC = [1+2*((C_INTERCONNECT-1)/2):0], BUS = M_AXI_DC:M_ACE_DC, DEFAULT = RRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_RLAST = RLAST, DIR = I, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = RLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_RVALID = RVALID, DIR = I, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = RVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_RREADY = RREADY, DIR = O, BUS = M_AXI_DC:M_ACE_DC, DEFAULT = RREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_RUSER = RUSER, DIR = I, VEC = [(C_M_AXI_DC_RUSER_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI_DC, DEFAULT = RUSER, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_RACK = RACK, DIR = O, BUS = M_ACE_DC, DEFAULT = RACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ACVALID = ACVALID, DIR = I, BUS = M_ACE_DC, DEFAULT = ACVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ACADDR = ACADDR, DIR = I, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [(C_M_AXI_DC_ADDR_WIDTH-1):0], DEFAULT = ACADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ACSNOOP = ACSNOOP, DIR = I, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [3:0], DEFAULT = ACSNOOP, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ACPROT = ACPROT, DIR = I, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [2:0], DEFAULT = ACPROT, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_ACREADY = ACREADY, DIR = O, BUS = M_ACE_DC, DEFAULT = ACREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_CRREADY = CRREADY, DIR = I, BUS = M_ACE_DC, DEFAULT = CRREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_CRVALID = CRVALID, DIR = O, BUS = M_ACE_DC, DEFAULT = CRVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_CRRESP = CRRESP, DIR = O, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [4:0], DEFAULT = CRRESP, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_CDVALID = CDVALID, DIR = O, BUS = M_ACE_DC, DEFAULT = CDVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_CDREADY = CDREADY, DIR = I, BUS = M_ACE_DC, DEFAULT = CDREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_CDDATA = CDDATA, DIR = O, BUS = M_ACE_DC, ENDIAN = LITTLE, VEC = [(C_M_AXI_DC_DATA_WIDTH-1):0], DEFAULT = CDDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_AXI_DC_CDLAST = CDLAST, DIR = O, BUS = M_ACE_DC, DEFAULT = CDLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DBG_CLK = Dbg_Clk, DIR = I, BUS = DEBUG, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DEBUG
 PORT DBG_TDI = Dbg_TDI, DIR = I, BUS = DEBUG, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DEBUG
 PORT DBG_TDO = Dbg_TDO, DIR = O, BUS = DEBUG, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DEBUG
 PORT DBG_REG_EN = Dbg_Reg_En, DIR = I, VEC = [0:7], BUS = DEBUG, DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DEBUG
 PORT DBG_SHIFT = Dbg_Shift, DIR = I, BUS = DEBUG, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DEBUG
 PORT DBG_CAPTURE = Dbg_Capture, DIR = I, BUS = DEBUG, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DEBUG
 PORT DBG_UPDATE = Dbg_Update, DIR = I, BUS = DEBUG, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DEBUG
 PORT DEBUG_RST = Debug_Rst, DIR = I, SIGIS = RST, BUS = DEBUG, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = DEBUG
 PORT Trace_Instruction = Trace_Instruction, DIR = O, VEC = [0:31], BUS = TRACE, DEFAULT = Trace_Instruction, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Valid_Instr = Trace_Valid_Instr, DIR = O, BUS = TRACE, DEFAULT = Trace_Valid_Instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_PC = Trace_PC, DIR = O, VEC = [0:31], BUS = TRACE, DEFAULT = Trace_PC, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Reg_Write = Trace_Reg_Write, DIR = O, BUS = TRACE, DEFAULT = Trace_Reg_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Reg_Addr = Trace_Reg_Addr, DIR = O, VEC = [0:4], BUS = TRACE, DEFAULT = Trace_Reg_Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_MSR_Reg = Trace_MSR_Reg, DIR = O, VEC = [0:14], BUS = TRACE, DEFAULT = Trace_MSR_Reg, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_PID_Reg = Trace_PID_Reg, DIR = O, VEC = [0:7], BUS = TRACE, DEFAULT = Trace_PID_Reg, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_New_Reg_Value = Trace_New_Reg_Value, DIR = O, VEC = [0:31], BUS = TRACE, DEFAULT = Trace_New_Reg_Value, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Exception_Taken = Trace_Exception_Taken, DIR = O, BUS = TRACE, DEFAULT = Trace_Exception_Taken, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Exception_Kind = Trace_Exception_Kind, DIR = O, VEC = [0:4], BUS = TRACE, DEFAULT = Trace_Exception_Kind, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Jump_Taken = Trace_Jump_Taken, DIR = O, BUS = TRACE, DEFAULT = Trace_Jump_Taken, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Delay_Slot = Trace_Delay_Slot, DIR = O, BUS = TRACE, DEFAULT = Trace_Delay_Slot, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Data_Address = Trace_Data_Address, DIR = O, VEC = [0:31], BUS = TRACE, DEFAULT = Trace_Data_Address, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Data_Access = Trace_Data_Access, DIR = O, BUS = TRACE, DEFAULT = Trace_Data_Access, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Data_Read = Trace_Data_Read, DIR = O, BUS = TRACE, DEFAULT = Trace_Data_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Data_Write = Trace_Data_Write, DIR = O, BUS = TRACE, DEFAULT = Trace_Data_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Data_Write_Value = Trace_Data_Write_Value, DIR = O, VEC = [0:31], BUS = TRACE, DEFAULT = Trace_Data_Write_Value, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Data_Byte_Enable = Trace_Data_Byte_Enable, DIR = O, VEC = [0:3], BUS = TRACE, DEFAULT = Trace_Data_Byte_Enable, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_DCache_Req = Trace_DCache_Req, DIR = O, BUS = TRACE, DEFAULT = Trace_DCache_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_DCache_Hit = Trace_DCache_Hit, DIR = O, BUS = TRACE, DEFAULT = Trace_DCache_Hit, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_DCache_Rdy = Trace_DCache_Rdy, DIR = O, BUS = TRACE, DEFAULT = Trace_DCache_Rdy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_DCache_Read = Trace_DCache_Read, DIR = O, BUS = TRACE, DEFAULT = Trace_DCache_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_ICache_Req = Trace_ICache_Req, DIR = O, BUS = TRACE, DEFAULT = Trace_ICache_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_ICache_Hit = Trace_ICache_Hit, DIR = O, BUS = TRACE, DEFAULT = Trace_ICache_Hit, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_ICache_Rdy = Trace_ICache_Rdy, DIR = O, BUS = TRACE, DEFAULT = Trace_ICache_Rdy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_OF_PipeRun = Trace_OF_PipeRun, DIR = O, BUS = TRACE, DEFAULT = Trace_OF_PipeRun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_EX_PipeRun = Trace_EX_PipeRun, DIR = O, BUS = TRACE, DEFAULT = Trace_EX_PipeRun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_MEM_PipeRun = Trace_MEM_PipeRun, DIR = O, BUS = TRACE, DEFAULT = Trace_MEM_PipeRun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_MB_Halted = Trace_MB_Halted, DIR = O, BUS = TRACE, DEFAULT = Trace_MB_Halted, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Trace_Jump_Hit = Trace_Jump_Hit, DIR = O, BUS = TRACE, DEFAULT = Trace_Jump_Hit, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL0:DRFSL0, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_READ = FSL_S_Read, DIR = O, BUS = SFSL0:DRFSL0, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL0:DRFSL0, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL0:DRFSL0, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL0:DRFSL0, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL0:DWFSL0, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL0:DWFSL0, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL0:DWFSL0, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL0:DWFSL0, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL0:DWFSL0, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL1:DRFSL1, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_READ = FSL_S_Read, DIR = O, BUS = SFSL1:DRFSL1, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL1:DRFSL1, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL1:DRFSL1, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL1:DRFSL1, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL1:DWFSL1, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL1:DWFSL1, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL1:DWFSL1, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL1:DWFSL1, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL1:DWFSL1, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL2:DRFSL2, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_READ = FSL_S_Read, DIR = O, BUS = SFSL2:DRFSL2, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL2:DRFSL2, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL2:DRFSL2, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL2:DRFSL2, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL2:DWFSL2, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL2:DWFSL2, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL2:DWFSL2, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL2:DWFSL2, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL2:DWFSL2, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL3:DRFSL3, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_READ = FSL_S_Read, DIR = O, BUS = SFSL3:DRFSL3, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL3:DRFSL3, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL3:DRFSL3, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL3:DRFSL3, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL3:DWFSL3, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL3:DWFSL3, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL3:DWFSL3, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL3:DWFSL3, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL3:DWFSL3, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL4:DRFSL4, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_READ = FSL_S_Read, DIR = O, BUS = SFSL4:DRFSL4, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL4:DRFSL4, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL4:DRFSL4, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL4:DRFSL4, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL4:DWFSL4, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL4:DWFSL4, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL4:DWFSL4, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL4:DWFSL4, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL4:DWFSL4, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL5:DRFSL5, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_READ = FSL_S_Read, DIR = O, BUS = SFSL5:DRFSL5, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL5:DRFSL5, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL5:DRFSL5, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL5:DRFSL5, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL5:DWFSL5, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL5:DWFSL5, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL5:DWFSL5, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL5:DWFSL5, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL5:DWFSL5, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL6:DRFSL6, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_READ = FSL_S_Read, DIR = O, BUS = SFSL6:DRFSL6, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL6:DRFSL6, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL6:DRFSL6, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL6:DRFSL6, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL6:DWFSL6, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL6:DWFSL6, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL6:DWFSL6, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL6:DWFSL6, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL6:DWFSL6, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL7:DRFSL7, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_READ = FSL_S_Read, DIR = O, BUS = SFSL7:DRFSL7, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL7:DRFSL7, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL7:DRFSL7, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL7:DRFSL7, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL7:DWFSL7, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL7:DWFSL7, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL7:DWFSL7, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL7:DWFSL7, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL7:DWFSL7, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL8:DRFSL8, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_S_READ = FSL_S_Read, DIR = O, BUS = SFSL8:DRFSL8, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL8:DRFSL8, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL8:DRFSL8, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL8:DRFSL8, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL8:DWFSL8, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL8:DWFSL8, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL8:DWFSL8, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL8:DWFSL8, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL8_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL8:DWFSL8, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL9:DRFSL9, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_S_READ = FSL_S_Read, DIR = O, BUS = SFSL9:DRFSL9, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL9:DRFSL9, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL9:DRFSL9, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL9:DRFSL9, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL9:DWFSL9, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL9:DWFSL9, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL9:DWFSL9, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL9:DWFSL9, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL9_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL9:DWFSL9, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL10:DRFSL10, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_S_READ = FSL_S_Read, DIR = O, BUS = SFSL10:DRFSL10, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL10:DRFSL10, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL10:DRFSL10, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL10:DRFSL10, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL10:DWFSL10, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL10:DWFSL10, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL10:DWFSL10, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL10:DWFSL10, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL10_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL10:DWFSL10, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL11:DRFSL11, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_S_READ = FSL_S_Read, DIR = O, BUS = SFSL11:DRFSL11, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL11:DRFSL11, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL11:DRFSL11, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL11:DRFSL11, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL11:DWFSL11, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL11:DWFSL11, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL11:DWFSL11, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL11:DWFSL11, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL11_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL11:DWFSL11, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL12:DRFSL12, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_S_READ = FSL_S_Read, DIR = O, BUS = SFSL12:DRFSL12, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL12:DRFSL12, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL12:DRFSL12, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL12:DRFSL12, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL12:DWFSL12, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL12:DWFSL12, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL12:DWFSL12, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL12:DWFSL12, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL12_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL12:DWFSL12, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL13:DRFSL13, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_S_READ = FSL_S_Read, DIR = O, BUS = SFSL13:DRFSL13, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL13:DRFSL13, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL13:DRFSL13, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL13:DRFSL13, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL13:DWFSL13, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL13:DWFSL13, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL13:DWFSL13, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL13:DWFSL13, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL13_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL13:DWFSL13, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL14:DRFSL14, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_S_READ = FSL_S_Read, DIR = O, BUS = SFSL14:DRFSL14, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL14:DRFSL14, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL14:DRFSL14, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL14:DRFSL14, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL14:DWFSL14, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL14:DWFSL14, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL14:DWFSL14, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL14:DWFSL14, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL14_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL14:DWFSL14, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL15:DRFSL15, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_S_READ = FSL_S_Read, DIR = O, BUS = SFSL15:DRFSL15, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL15:DRFSL15, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL15:DRFSL15, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL15:DRFSL15, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL15:DWFSL15, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL15:DWFSL15, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL15:DWFSL15, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL15:DWFSL15, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL15_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL15:DWFSL15, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M0_AXIS_TLAST = TLAST, BUS = M0_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M0_AXIS_TDATA = TDATA, BUS = M0_AXIS, DIR = O, VEC = [C_M0_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M0_AXIS_TVALID = TVALID, BUS = M0_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M0_AXIS_TREADY = TREADY, BUS = M0_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S0_AXIS_TLAST = TLAST, BUS = S0_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S0_AXIS_TDATA = TDATA, BUS = S0_AXIS, DIR = I, VEC = [C_S0_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S0_AXIS_TVALID = TVALID, BUS = S0_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S0_AXIS_TREADY = TREADY, BUS = S0_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M1_AXIS_TLAST = TLAST, BUS = M1_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M1_AXIS_TDATA = TDATA, BUS = M1_AXIS, DIR = O, VEC = [C_M1_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M1_AXIS_TVALID = TVALID, BUS = M1_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M1_AXIS_TREADY = TREADY, BUS = M1_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S1_AXIS_TLAST = TLAST, BUS = S1_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S1_AXIS_TDATA = TDATA, BUS = S1_AXIS, DIR = I, VEC = [C_S1_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S1_AXIS_TVALID = TVALID, BUS = S1_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S1_AXIS_TREADY = TREADY, BUS = S1_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M2_AXIS_TLAST = TLAST, BUS = M2_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M2_AXIS_TDATA = TDATA, BUS = M2_AXIS, DIR = O, VEC = [C_M2_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M2_AXIS_TVALID = TVALID, BUS = M2_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M2_AXIS_TREADY = TREADY, BUS = M2_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S2_AXIS_TLAST = TLAST, BUS = S2_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S2_AXIS_TDATA = TDATA, BUS = S2_AXIS, DIR = I, VEC = [C_S2_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S2_AXIS_TVALID = TVALID, BUS = S2_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S2_AXIS_TREADY = TREADY, BUS = S2_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M3_AXIS_TLAST = TLAST, BUS = M3_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M3_AXIS_TDATA = TDATA, BUS = M3_AXIS, DIR = O, VEC = [C_M3_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M3_AXIS_TVALID = TVALID, BUS = M3_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M3_AXIS_TREADY = TREADY, BUS = M3_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S3_AXIS_TLAST = TLAST, BUS = S3_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S3_AXIS_TDATA = TDATA, BUS = S3_AXIS, DIR = I, VEC = [C_S3_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S3_AXIS_TVALID = TVALID, BUS = S3_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S3_AXIS_TREADY = TREADY, BUS = S3_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M4_AXIS_TLAST = TLAST, BUS = M4_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M4_AXIS_TDATA = TDATA, BUS = M4_AXIS, DIR = O, VEC = [C_M4_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M4_AXIS_TVALID = TVALID, BUS = M4_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M4_AXIS_TREADY = TREADY, BUS = M4_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S4_AXIS_TLAST = TLAST, BUS = S4_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S4_AXIS_TDATA = TDATA, BUS = S4_AXIS, DIR = I, VEC = [C_S4_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S4_AXIS_TVALID = TVALID, BUS = S4_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S4_AXIS_TREADY = TREADY, BUS = S4_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M5_AXIS_TLAST = TLAST, BUS = M5_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M5_AXIS_TDATA = TDATA, BUS = M5_AXIS, DIR = O, VEC = [C_M5_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M5_AXIS_TVALID = TVALID, BUS = M5_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M5_AXIS_TREADY = TREADY, BUS = M5_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S5_AXIS_TLAST = TLAST, BUS = S5_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S5_AXIS_TDATA = TDATA, BUS = S5_AXIS, DIR = I, VEC = [C_S5_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S5_AXIS_TVALID = TVALID, BUS = S5_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S5_AXIS_TREADY = TREADY, BUS = S5_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M6_AXIS_TLAST = TLAST, BUS = M6_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M6_AXIS_TDATA = TDATA, BUS = M6_AXIS, DIR = O, VEC = [C_M6_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M6_AXIS_TVALID = TVALID, BUS = M6_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M6_AXIS_TREADY = TREADY, BUS = M6_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S6_AXIS_TLAST = TLAST, BUS = S6_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S6_AXIS_TDATA = TDATA, BUS = S6_AXIS, DIR = I, VEC = [C_S6_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S6_AXIS_TVALID = TVALID, BUS = S6_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S6_AXIS_TREADY = TREADY, BUS = S6_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M7_AXIS_TLAST = TLAST, BUS = M7_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M7_AXIS_TDATA = TDATA, BUS = M7_AXIS, DIR = O, VEC = [C_M7_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M7_AXIS_TVALID = TVALID, BUS = M7_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M7_AXIS_TREADY = TREADY, BUS = M7_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S7_AXIS_TLAST = TLAST, BUS = S7_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S7_AXIS_TDATA = TDATA, BUS = S7_AXIS, DIR = I, VEC = [C_S7_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S7_AXIS_TVALID = TVALID, BUS = S7_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S7_AXIS_TREADY = TREADY, BUS = S7_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M8_AXIS_TLAST = TLAST, BUS = M8_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M8_AXIS_TDATA = TDATA, BUS = M8_AXIS, DIR = O, VEC = [C_M8_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M8_AXIS_TVALID = TVALID, BUS = M8_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M8_AXIS_TREADY = TREADY, BUS = M8_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S8_AXIS_TLAST = TLAST, BUS = S8_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S8_AXIS_TDATA = TDATA, BUS = S8_AXIS, DIR = I, VEC = [C_S8_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S8_AXIS_TVALID = TVALID, BUS = S8_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S8_AXIS_TREADY = TREADY, BUS = S8_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M9_AXIS_TLAST = TLAST, BUS = M9_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M9_AXIS_TDATA = TDATA, BUS = M9_AXIS, DIR = O, VEC = [C_M9_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M9_AXIS_TVALID = TVALID, BUS = M9_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M9_AXIS_TREADY = TREADY, BUS = M9_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S9_AXIS_TLAST = TLAST, BUS = S9_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S9_AXIS_TDATA = TDATA, BUS = S9_AXIS, DIR = I, VEC = [C_S9_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S9_AXIS_TVALID = TVALID, BUS = S9_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S9_AXIS_TREADY = TREADY, BUS = S9_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M10_AXIS_TLAST = TLAST, BUS = M10_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M10_AXIS_TDATA = TDATA, BUS = M10_AXIS, DIR = O, VEC = [C_M10_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M10_AXIS_TVALID = TVALID, BUS = M10_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M10_AXIS_TREADY = TREADY, BUS = M10_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S10_AXIS_TLAST = TLAST, BUS = S10_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S10_AXIS_TDATA = TDATA, BUS = S10_AXIS, DIR = I, VEC = [C_S10_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S10_AXIS_TVALID = TVALID, BUS = S10_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S10_AXIS_TREADY = TREADY, BUS = S10_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M11_AXIS_TLAST = TLAST, BUS = M11_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M11_AXIS_TDATA = TDATA, BUS = M11_AXIS, DIR = O, VEC = [C_M11_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M11_AXIS_TVALID = TVALID, BUS = M11_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M11_AXIS_TREADY = TREADY, BUS = M11_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S11_AXIS_TLAST = TLAST, BUS = S11_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S11_AXIS_TDATA = TDATA, BUS = S11_AXIS, DIR = I, VEC = [C_S11_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S11_AXIS_TVALID = TVALID, BUS = S11_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S11_AXIS_TREADY = TREADY, BUS = S11_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M12_AXIS_TLAST = TLAST, BUS = M12_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M12_AXIS_TDATA = TDATA, BUS = M12_AXIS, DIR = O, VEC = [C_M12_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M12_AXIS_TVALID = TVALID, BUS = M12_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M12_AXIS_TREADY = TREADY, BUS = M12_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S12_AXIS_TLAST = TLAST, BUS = S12_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S12_AXIS_TDATA = TDATA, BUS = S12_AXIS, DIR = I, VEC = [C_S12_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S12_AXIS_TVALID = TVALID, BUS = S12_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S12_AXIS_TREADY = TREADY, BUS = S12_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M13_AXIS_TLAST = TLAST, BUS = M13_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M13_AXIS_TDATA = TDATA, BUS = M13_AXIS, DIR = O, VEC = [C_M13_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M13_AXIS_TVALID = TVALID, BUS = M13_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M13_AXIS_TREADY = TREADY, BUS = M13_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S13_AXIS_TLAST = TLAST, BUS = S13_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S13_AXIS_TDATA = TDATA, BUS = S13_AXIS, DIR = I, VEC = [C_S13_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S13_AXIS_TVALID = TVALID, BUS = S13_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S13_AXIS_TREADY = TREADY, BUS = S13_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M14_AXIS_TLAST = TLAST, BUS = M14_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M14_AXIS_TDATA = TDATA, BUS = M14_AXIS, DIR = O, VEC = [C_M14_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M14_AXIS_TVALID = TVALID, BUS = M14_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M14_AXIS_TREADY = TREADY, BUS = M14_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S14_AXIS_TLAST = TLAST, BUS = S14_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S14_AXIS_TDATA = TDATA, BUS = S14_AXIS, DIR = I, VEC = [C_S14_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S14_AXIS_TVALID = TVALID, BUS = S14_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S14_AXIS_TREADY = TREADY, BUS = S14_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M15_AXIS_TLAST = TLAST, BUS = M15_AXIS, DIR = O, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M15_AXIS_TDATA = TDATA, BUS = M15_AXIS, DIR = O, VEC = [C_M15_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M15_AXIS_TVALID = TVALID, BUS = M15_AXIS, DIR = O, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M15_AXIS_TREADY = TREADY, BUS = M15_AXIS, DIR = I, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S15_AXIS_TLAST = TLAST, BUS = S15_AXIS, DIR = I, DEFAULT = TLAST, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S15_AXIS_TDATA = TDATA, BUS = S15_AXIS, DIR = I, VEC = [C_S15_AXIS_DATA_WIDTH-1:0], DEFAULT = TDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S15_AXIS_TVALID = TVALID, BUS = S15_AXIS, DIR = I, DEFAULT = TVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S15_AXIS_TREADY = TREADY, BUS = S15_AXIS, DIR = O, DEFAULT = TREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_IN_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = IXCL, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_IN_READ = FSL_S_Read, DIR = O, BUS = IXCL, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_IN_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = IXCL, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_IN_CONTROL = FSL_S_Control, DIR = I, BUS = IXCL, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_IN_EXISTS = FSL_S_Exists, DIR = I, BUS = IXCL, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_OUT_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = IXCL, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_OUT_WRITE = FSL_M_Write, DIR = O, BUS = IXCL, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_OUT_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = IXCL, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_OUT_CONTROL = FSL_M_Control, DIR = O, BUS = IXCL, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT ICACHE_FSL_OUT_FULL = FSL_M_Full, DIR = I, BUS = IXCL, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_IN_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = DXCL, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_IN_READ = FSL_S_Read, DIR = O, BUS = DXCL, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_IN_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = DXCL, DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_IN_CONTROL = FSL_S_Control, DIR = I, BUS = DXCL, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_IN_EXISTS = FSL_S_Exists, DIR = I, BUS = DXCL, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_OUT_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = DXCL, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_OUT_WRITE = FSL_M_Write, DIR = O, BUS = DXCL, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_OUT_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = DXCL, DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_OUT_CONTROL = FSL_M_Control, DIR = O, BUS = DXCL, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCACHE_FSL_OUT_FULL = FSL_M_Full, DIR = I, BUS = DXCL, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
END

BEGIN plb_v46
 PARAMETER INSTANCE = mb_plb
 PARAMETER C_PLBV46_NUM_MASTERS = 4, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = MPLB_Rst:M_ABus:M_UABus:M_BE:M_RNW:M_abort:M_busLock:M_TAttribute:M_lockErr:M_MSize:M_priority:M_rdBurst:M_request:M_size:M_type:M_wrBurst:M_wrDBus:Sl_MRdErr:Sl_MWrErr:Sl_MBusy:Sl_MIRQ:PLB_MIRQ:PLB_MAddrAck:PLB_MTimeout:PLB_MBusy:PLB_MRdErr:PLB_MWrErr:PLB_MRdBTerm:PLB_MRdDAck:PLB_MRdDBus:PLB_MRdWdAddr:PLB_MRearbitrate:PLB_MWrBTerm:PLB_MWrDAck:PLB_MSSize:PLB_SMRdErr:PLB_SMWrErr:PLB_SMBusy, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 4
 PARAMETER C_PLBV46_NUM_SLAVES = 8, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB_Rst:Sl_addrAck:Sl_MRdErr:Sl_MWrErr:Sl_MBusy:Sl_rdBTerm:Sl_rdComp:Sl_rdDAck:Sl_rdDBus:Sl_rdWdAddr:Sl_rearbitrate:Sl_SSize:Sl_wait:Sl_wrBTerm:Sl_wrComp:Sl_wrDAck:Sl_MIRQ:PLB_rdPrim:PLB_wrPrim, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 8
 PARAMETER C_PLBV46_MID_WIDTH = 2, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2
 PARAMETER C_PLBV46_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_PLBV46_DWIDTH = 64, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = M_BE:M_wrDBus:Sl_rdDBus:PLB_BE:PLB_MRdDBus:PLB_wrDBus:PLB_SrdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 64
 PARAMETER C_DCR_INTFCE = 0, DT = integer, BUS = SDCR, RANGE = (0,1), ISVALID = (C_P2P==0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_BASEADDR:C_HIGHADDR, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_BASEADDR = 0b1111111111, DT = std_logic_vector, BUS = SDCR, MIN_SIZE = 0x08, ASSIGNMENT = REQUIRE, ISVALID = (C_DCR_INTFCE==1), ADDR_TYPE = REGISTER, PAIR = C_HIGHADDR, ADDRESS = BASE, BITWIDTH = 10, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0b1111111111, RESOLVED_BUS = 
 PARAMETER C_HIGHADDR = 0b0000000000, DT = std_logic_vector, ASSIGNMENT = REQUIRE, ISVALID = (C_DCR_INTFCE==1), BUS = SDCR, ADDR_TYPE = REGISTER, PAIR = C_BASEADDR, ADDRESS = HIGH, BITWIDTH = 10, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0b0000000000, RESOLVED_BUS = 
 PARAMETER C_DCR_AWIDTH = 10, DT = integer, BUS = SDCR, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = DCR_ABus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 10, RESOLVED_BUS = 
 PARAMETER C_DCR_DWIDTH = 32, DT = integer, BUS = SDCR, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = PLB_dcrDBus:DCR_DBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_NUM_CLK_PLB2OPB_REARB = 5, DT = integer, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 5
 PARAMETER C_ADDR_PIPELINING_TYPE = 1, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_FAMILY = virtex5, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_P2P = 0, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_DCR_INTFCE, MPD_VALUE = 0
 PARAMETER C_ARB_TYPE = 0, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER HW_VER = 1.05.a
 PORT PLB_Clk = clk_50_0000MHz, DIR = I, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_50_0000MHz
 PORT SYS_Rst = sys_bus_reset, DIR = I, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_bus_reset
 PORT PLB_Rst = PLB_Rst, DIR = O, SIGIS = RST, DEFAULT = PLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT SPLB_Rst = SPLB_Rst, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1], SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT MPLB_Rst = MPLB_Rst, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], SIGIS = RST, DEFAULT = MPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_dcrAck = Sl_dcrAck, DIR = O, BUS = SDCR, DEFAULT = Sl_dcrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLB_dcrDBus = Sl_dcrDBus, DIR = O, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR, DEFAULT = Sl_dcrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCR_ABus = DCR_ABus, DIR = I, VEC = [0:C_DCR_AWIDTH-1], BUS = SDCR, DEFAULT = DCR_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCR_DBus = DCR_Sl_DBus, DIR = I, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR, DEFAULT = DCR_Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCR_Read = DCR_Read, DIR = I, BUS = SDCR, DEFAULT = DCR_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCR_Write = DCR_Write, DIR = I, BUS = SDCR, DEFAULT = DCR_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_ABus = M_ABus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*32)-1], DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_UABus = M_UABus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*32)-1], DEFAULT = M_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_BE = M_BE, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*(C_PLBV46_DWIDTH/8))-1], DEFAULT = M_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_RNW = M_RNW, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_abort = M_abort, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_busLock = M_busLock, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_TAttribute = M_TAttribute, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*16)-1], DEFAULT = M_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_lockErr = M_lockErr, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_MSize = M_MSize, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1], DEFAULT = M_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_priority = M_priority, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1], DEFAULT = M_priority, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_rdBurst = M_rdBurst, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_request = M_request, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_request, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_size = M_size, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*4)-1], DEFAULT = M_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_type = M_type, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*3)-1], DEFAULT = M_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_wrBurst = M_wrBurst, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_wrDBus = M_wrDBus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*C_PLBV46_DWIDTH)-1], DEFAULT = M_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_addrAck = Sl_addrAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_MRdErr = Sl_MRdErr, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS)-1], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_MWrErr = Sl_MWrErr, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS)-1], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_MBusy = Sl_MBusy, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS - 1 ], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdComp = Sl_rdComp, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdDAck = Sl_rdDAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdDBus = Sl_rdDBus, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_DWIDTH-1], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*4-1], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_SSize = Sl_SSize, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*2-1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_wait = Sl_wait, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_wrComp = Sl_wrComp, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_wrDAck = Sl_wrDAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_MIRQ = Sl_MIRQ, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS-1], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MIRQ = PLB_MIRQ, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_ABus = PLB_ABus, DIR = O, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_UABus = PLB_UABus, DIR = O, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_BE = PLB_BE, DIR = O, VEC = [0:(C_PLBV46_DWIDTH/8)-1], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MAddrAck = PLB_MAddrAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MAddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MTimeout = PLB_MTimeout, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MTimeout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MBusy = PLB_MBusy, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdErr = PLB_MRdErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MWrErr = PLB_MWrErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MRdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdDAck = PLB_MRdDAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MRdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdDBus = PLB_MRdDBus, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*C_PLBV46_DWIDTH)-1], DEFAULT = PLB_MRdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*4)-1], DEFAULT = PLB_MRdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MRearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MWrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MWrDAck = PLB_MWrDAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MWrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MSSize = PLB_MSSize, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1], DEFAULT = PLB_MSSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_PAValid = PLB_PAValid, DIR = O, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_RNW = PLB_RNW, DIR = O, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SAValid = PLB_SAValid, DIR = O, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_abort = PLB_abort, DIR = O, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_busLock = PLB_busLock, DIR = O, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_TAttribute = PLB_TAttribute, DIR = O, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_lockErr = PLB_lockErr, DIR = O, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_masterID = PLB_masterID, DIR = O, VEC = [0:C_PLBV46_MID_WIDTH-1], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MSize = PLB_MSize, DIR = O, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = O, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = O, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = O, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = O, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_rdBurst = PLB_rdBurst, DIR = O, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_rdPrim = PLB_rdPrim, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_reqPri = PLB_reqPri, DIR = O, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_size = PLB_size, DIR = O, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_type = PLB_type, DIR = O, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrBurst = PLB_wrBurst, DIR = O, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrDBus = PLB_wrDBus, DIR = O, VEC = [0:C_PLBV46_DWIDTH-1], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrPrim = PLB_wrPrim, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SaddrAck = PLB_SaddrAck, DIR = O, DEFAULT = PLB_SaddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SMRdErr = PLB_SMRdErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_SMRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SMWrErr = PLB_SMWrErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_SMWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SMBusy = PLB_SMBusy, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_SMBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdBTerm = PLB_SrdBTerm, DIR = O, DEFAULT = PLB_SrdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdComp = PLB_SrdComp, DIR = O, DEFAULT = PLB_SrdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdDAck = PLB_SrdDAck, DIR = O, DEFAULT = PLB_SrdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdDBus = PLB_SrdDBus, DIR = O, VEC = [0:C_PLBV46_DWIDTH-1], DEFAULT = PLB_SrdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdWdAddr = PLB_SrdWdAddr, DIR = O, VEC = [0:3], DEFAULT = PLB_SrdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_Srearbitrate = PLB_Srearbitrate, DIR = O, DEFAULT = PLB_Srearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_Sssize = PLB_Sssize, DIR = O, VEC = [0:1], DEFAULT = PLB_Sssize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_Swait = PLB_Swait, DIR = O, DEFAULT = PLB_Swait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SwrBTerm = PLB_SwrBTerm, DIR = O, DEFAULT = PLB_SwrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SwrComp = PLB_SwrComp, DIR = O, DEFAULT = PLB_SwrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SwrDAck = PLB_SwrDAck, DIR = O, DEFAULT = PLB_SwrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
END

BEGIN lmb_v10
 PARAMETER INSTANCE = ilmb
 PARAMETER C_LMB_NUM_SLAVES = 4, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_DBus:Sl_Ready:Sl_Wait:Sl_UE:Sl_CE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 4
 PARAMETER C_LMB_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_ABus:LMB_ABus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_LMB_DWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_DBus:M_BE:Sl_DBus:LMB_ReadDBus:LMB_WriteDBus:LMB_BE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER HW_VER = 2.00.b
 PORT LMB_Clk = clk_50_0000MHz, DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_50_0000MHz
 PORT SYS_Rst = sys_bus_reset, DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_bus_reset
 PORT LMB_Rst = LMB_Rst, DIR = O, SIGIS = RST, DEFAULT = LMB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_ABus = M_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_ReadStrobe = M_ReadStrobe, DIR = I, DEFAULT = M_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_WriteStrobe = M_WriteStrobe, DIR = I, DEFAULT = M_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_AddrStrobe = M_AddrStrobe, DIR = I, DEFAULT = M_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_DBus = M_DBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], DEFAULT = M_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_BE = M_BE, DIR = I, VEC = [0:(C_LMB_DWIDTH+7)/8-1], DEFAULT = M_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_DBus = Sl_DBus, DIR = I, VEC = [0:(C_LMB_DWIDTH*C_LMB_NUM_SLAVES)-1], INITIALVAL = VCC, DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_Ready = Sl_Ready, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = VCC, DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_Wait = Sl_Wait, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = GND, DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_UE = Sl_UE, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = GND, DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_CE = Sl_CE, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = GND, DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_ABus = LMB_ABus, DIR = O, VEC = [0:C_LMB_AWIDTH-1], DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = O, DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = O, DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = O, DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_ReadDBus = LMB_ReadDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], DEFAULT = LMB_ReadDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_WriteDBus = LMB_WriteDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_Ready = LMB_Ready, DIR = O, DEFAULT = LMB_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_Wait = LMB_Wait, DIR = O, DEFAULT = LMB_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_UE = LMB_UE, DIR = O, DEFAULT = LMB_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_CE = LMB_CE, DIR = O, DEFAULT = LMB_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_BE = LMB_BE, DIR = O, VEC = [0:(C_LMB_DWIDTH+7)/8-1], DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
END

BEGIN lmb_v10
 PARAMETER INSTANCE = dlmb
 PARAMETER C_LMB_NUM_SLAVES = 4, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_DBus:Sl_Ready:Sl_Wait:Sl_UE:Sl_CE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 4
 PARAMETER C_LMB_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_ABus:LMB_ABus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_LMB_DWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = M_DBus:M_BE:Sl_DBus:LMB_ReadDBus:LMB_WriteDBus:LMB_BE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER HW_VER = 2.00.b
 PORT LMB_Clk = clk_50_0000MHz, DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_50_0000MHz
 PORT SYS_Rst = sys_bus_reset, DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_bus_reset
 PORT LMB_Rst = LMB_Rst, DIR = O, SIGIS = RST, DEFAULT = LMB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_ABus = M_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_ReadStrobe = M_ReadStrobe, DIR = I, DEFAULT = M_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_WriteStrobe = M_WriteStrobe, DIR = I, DEFAULT = M_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_AddrStrobe = M_AddrStrobe, DIR = I, DEFAULT = M_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_DBus = M_DBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], DEFAULT = M_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_BE = M_BE, DIR = I, VEC = [0:(C_LMB_DWIDTH+7)/8-1], DEFAULT = M_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_DBus = Sl_DBus, DIR = I, VEC = [0:(C_LMB_DWIDTH*C_LMB_NUM_SLAVES)-1], INITIALVAL = VCC, DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_Ready = Sl_Ready, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = VCC, DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_Wait = Sl_Wait, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = GND, DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_UE = Sl_UE, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = GND, DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_CE = Sl_CE, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = GND, DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_ABus = LMB_ABus, DIR = O, VEC = [0:C_LMB_AWIDTH-1], DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = O, DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = O, DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = O, DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_ReadDBus = LMB_ReadDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], DEFAULT = LMB_ReadDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_WriteDBus = LMB_WriteDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_Ready = LMB_Ready, DIR = O, DEFAULT = LMB_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_Wait = LMB_Wait, DIR = O, DEFAULT = LMB_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_UE = LMB_UE, DIR = O, DEFAULT = LMB_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_CE = LMB_CE, DIR = O, DEFAULT = LMB_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT LMB_BE = LMB_BE, DIR = O, VEC = [0:(C_LMB_DWIDTH+7)/8-1], DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
END

BEGIN lmb_bram_if_cntlr
 PARAMETER INSTANCE = dlmb_cntlr
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_MASTERS = none, DT = string, TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Masters that can talk to this slave, LONG_DESC = The '&' separated list of master interfaces that can access this slave, GUI_PERMIT = , BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = none, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_IS_ACLK_ASYNC = 0, DT = integer, RANGE = (0, 1), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Is ACLK Asynchronous to Interconnect_ACLK, LONG_DESC = Is ACLK asynchronous with respect to the interconnect's ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_ACLK_RATIO = 1, DT = integer, TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = UPDATE, DESC = ACLK Frequency Ratio, LONG_DESC = In relation to C_INTERCONNECT_ACLK_RATIO on the interconnect, indicates the ratio of the ACLK frequency of this bus interface to the frequency of Interconnect_ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_SECURE = 0, DT = integer, RANGE = (0,1), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Require TrustZone Secure on all accesses, LONG_DESC = All accesses to slave required to be secure, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_AW_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AW channel, LONG_DESC = Insert register slice on AW channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_AR_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AR channel, LONG_DESC = Insert register slice on AR channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_W_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on W channel, LONG_DESC = Insert register slice on W channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_R_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on R channel, LONG_DESC = Insert register slice on R channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_B_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on B channel, LONG_DESC = Insert register slice on B channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_WRITE_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Write Data FIFO Depth, LONG_DESC = Depth of bus interface write data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_READ_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Read Data FIFO Depth, LONG_DESC = Depth of bus interface read data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_WRITE_ACCEPTANCE = 1, DT = integer, RANGE = (1, 2, 4, 8, 16, 32), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Write Transaction Acceptance Limit, LONG_DESC = Maximum number of active write transactions that the bus interface can accept. This parameter is ignored when the IP is connected to an interconnect in SASD mode., GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_READ_ACCEPTANCE = 1, DT = integer, RANGE = (1, 2, 4, 8, 16, 32), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Read Transaction Acceptance Limit, LONG_DESC = Maximum number of active read transactions that the bus interface can accept. This parameter is ignored when the IP is connected to an interconnect in SASD mode., GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_ADDED_AXI_PARAMS = TRUE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_S_AXI_CTRL_AXI_VER = 1.01.a, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_BASEADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SLMB:SLMB1:SLMB2:SLMB3, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x800, ADDR_TYPE = MEMORY, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, MHS_VALUE = 0x00000000, RESOLVED_BUS = SLMB
 PARAMETER C_HIGHADDR = 0x0000ffff, DT = std_logic_vector(0 to 31), BUS = SLMB:SLMB1:SLMB2:SLMB3, ADDRESS = HIGH, PAIR = C_BASEADDR, ADDR_TYPE = MEMORY, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x0000ffff, RESOLVED_BUS = SLMB
 PARAMETER C_FAMILY = virtex5, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_MASK = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask_0, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00800000
 PARAMETER C_MASK1 = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask_1, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_LMB > 1), TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00800000
 PARAMETER C_MASK2 = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask_2, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_LMB > 2), TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00800000
 PARAMETER C_MASK3 = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask_3, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_LMB > 3), TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00800000
 PARAMETER C_LMB_AWIDTH = 32, DT = integer, BUS = SLMB, RANGE = (32:32), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = LMB_ABus:LMB1_ABus:LMB2_ABus:LMB3_ABus:BRAM_Addr_A, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SLMB
 PARAMETER C_LMB_DWIDTH = 32, DT = integer, BUS = SLMB, RANGE = (32:32), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = LMB_WriteDBus:LMB_BE:Sl_DBus:LMB1_WriteDBus:LMB1_BE:Sl1_DBus:LMB2_WriteDBus:LMB2_BE:Sl2_DBus:LMB3_WriteDBus:LMB3_BE:Sl3_DBus:BRAM_WEN_A:BRAM_Din_A:BRAM_Dout_A, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SLMB
 PARAMETER C_ECC = 0, DT = integer, RANGE = (0:1), AFFECTS_PORTS_VEC = BRAM_WEN_A:BRAM_Din_A:BRAM_Dout_A, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_INTERCONNECT:C_FAULT_INJECT:C_CE_FAILING_REGISTERS:C_UE_FAILING_REGISTERS:C_ECC_STATUS_REGISTERS:C_ECC_ONOFF_REGISTER:C_ECC_ONOFF_RESET_VALUE:C_CE_COUNTER_WIDTH:C_WRITE_ACCESS, MPD_VALUE = 0
 PARAMETER C_INTERCONNECT = 0, DT = integer, RANGE = (0:2), VALUES = (0=None, 1=PLBv46, 2=AXI), ISVALID = (C_ECC == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_FAULT_INJECT:C_CE_FAILING_REGISTERS:C_UE_FAILING_REGISTERS:C_ECC_STATUS_REGISTERS:C_ECC_ONOFF_REGISTER:C_ECC_ONOFF_RESET_VALUE:C_CE_COUNTER_WIDTH:C_SPLB_CTRL_BASEADDR:C_SPLB_CTRL_HIGHADDR:C_SPLB_CTRL_AWIDTH:C_SPLB_CTRL_DWIDTH:C_SPLB_CTRL_P2P:C_SPLB_CTRL_MID_WIDTH:C_SPLB_CTRL_NUM_MASTERS:C_SPLB_CTRL_SUPPORT_BURSTS:C_SPLB_CTRL_NATIVE_DWIDTH:C_SPLB_CTRL_CLK_FREQ_HZ:C_S_AXI_CTRL_ACLK_FREQ_HZ:C_S_AXI_CTRL_BASEADDR:C_S_AXI_CTRL_HIGHADDR:C_S_AXI_CTRL_ADDR_WIDTH:C_S_AXI_CTRL_DATA_WIDTH:C_S_AXI_CTRL_PROTOCOL, MPD_VALUE = 0
 PARAMETER C_FAULT_INJECT = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0 && C_WRITE_ACCESS != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CE_FAILING_REGISTERS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_UE_FAILING_REGISTERS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_STATUS_REGISTERS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_ONOFF_REGISTER = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_ONOFF_RESET_VALUE = 1, DT = integer, RANGE = (0:1), VALUES = (0=0, 1=1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_CE_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:31), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_WRITE_ACCESS = 2, DT = integer, RANGE = (0:2), VALUES = (0=NONE,1=WORD_ONLY,2=FULL), ISVALID = (C_ECC == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_FAULT_INJECT, MPD_VALUE = 2
 PARAMETER C_NUM_LMB = 1, DT = integer, RANGE = (1:4), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_MASK1:C_MASK2:C_MASK3, MPD_VALUE = 1
 PARAMETER C_SPLB_CTRL_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB_CTRL, ADDRESS = BASE, PAIR = C_SPLB_CTRL_HIGHADDR, ASSIGNMENT = REQUIRE, MIN_SIZE = 0x100, ISVALID = (C_INTERCONNECT == 1), ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB_CTRL, ADDRESS = HIGH, PAIR = C_SPLB_CTRL_BASEADDR, ASSIGNMENT = REQUIRE, ISVALID = (C_INTERCONNECT == 1), ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_AWIDTH = 32, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_DWIDTH = 32, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB_CTRL_PLB_BE:SPLB_CTRL_PLB_wrDBus:SPLB_CTRL_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_P2P = 0, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB_CTRL_PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB_CTRL_Sl_MBusy:SPLB_CTRL_Sl_MWrErr:SPLB_CTRL_Sl_MRdErr:SPLB_CTRL_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB_CTRL, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_INTERCONNECT == 1), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), IO_IS = clk_freq, CLK_PORT = LMB_Clk, CLK_UNIT = HZ, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, GUI_PERMIT = , MPD_VALUE = 100000000, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_ACLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = S_AXI_CTRL, ASSIGNMENT = OPTIONAL_UPDATE, IO_IS = clk_freq, CLK_PORT = LMB_Clk, CLK_UNIT = HZ, TYPE = NON_HDL, ISVALID = (C_INTERCONNECT == 2), GUI_PERMIT = , MPD_VALUE = 100000000, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector(31 downto 0), PAIR = C_S_AXI_CTRL_HIGHADDR, ADDRESS = BASE, BUS = S_AXI_CTRL, ASSIGNMENT = REQUIRE, MIN_SIZE = 0x100, ISVALID = (C_INTERCONNECT == 2), ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), PAIR = C_S_AXI_CTRL_BASEADDR, ADDRESS = HIGH, BUS = S_AXI_CTRL, ASSIGNMENT = REQUIRE, ISVALID = (C_INTERCONNECT == 2), ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INTERCONNECT == 2), AFFECTS_PORTS_VEC = S_AXI_CTRL_AWADDR:S_AXI_CTRL_ARADDR, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INTERCONNECT == 2), AFFECTS_PORTS_VEC = S_AXI_CTRL_WDATA:S_AXI_CTRL_WSTRB:S_AXI_CTRL_RDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_PROTOCOL = AXI4LITE, DT = STRING, BUS = S_AXI_CTRL, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, ISVALID = (C_INTERCONNECT == 2), GUI_PERMIT = , MPD_VALUE = AXI4LITE, RESOLVED_BUS = 
 PARAMETER HW_VER = 3.10.c
 BUS_INTERFACE SLMB = dlmb, BUS_STD = LMB, BUS_TYPE = SLAVE
 BUS_INTERFACE BRAM_PORT = dlmb_port, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR
 PORT LMB_Rst = LMB_Rst, DIR = I, SIGIS = RST, BUS = SLMB, DEFAULT = LMB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB, DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB, DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB, DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB, DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB, DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB, DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB, DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_Ready = Sl_Ready, DIR = O, BUS = SLMB, DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_Wait = Sl_Wait, DIR = O, BUS = SLMB, DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_UE = Sl_UE, DIR = O, BUS = SLMB, DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_CE = Sl_CE, DIR = O, BUS = SLMB, DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB1_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_Ready = Sl_Ready, DIR = O, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_Wait = Sl_Wait, DIR = O, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_UE = Sl_UE, DIR = O, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_CE = Sl_CE, DIR = O, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_Ready = Sl_Ready, DIR = O, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_Wait = Sl_Wait, DIR = O, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_UE = Sl_UE, DIR = O, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_CE = Sl_CE, DIR = O, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_Ready = Sl_Ready, DIR = O, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_Wait = Sl_Wait, DIR = O, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_UE = Sl_UE, DIR = O, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_CE = Sl_CE, DIR = O, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT BRAM_Rst_A = BRAM_Rst, DIR = O, SIGIS = RST, BUS = BRAM_PORT, DEFAULT = BRAM_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_Clk_A = BRAM_Clk, DIR = O, SIGIS = CLK, BUS = BRAM_PORT, DEFAULT = BRAM_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_EN_A = BRAM_EN, DIR = O, BUS = BRAM_PORT, DEFAULT = BRAM_EN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_WEN_A = BRAM_WEN, DIR = O, VEC = [0:((C_LMB_DWIDTH+8*C_ECC)/8)-1], BUS = BRAM_PORT, DEFAULT = BRAM_WEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_Addr_A = BRAM_Addr, DIR = O, VEC = [0:C_LMB_AWIDTH-1], BUS = BRAM_PORT, DEFAULT = BRAM_Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_Din_A = BRAM_Din, DIR = I, VEC = [0:C_LMB_DWIDTH-1+8*C_ECC], BUS = BRAM_PORT, DEFAULT = BRAM_Din, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_Dout_A = BRAM_Dout, DIR = O, VEC = [0:C_LMB_DWIDTH-1+8*C_ECC], BUS = BRAM_PORT, DEFAULT = BRAM_Dout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT SPLB_CTRL_PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB_CTRL, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_CTRL_MID_WIDTH-1)], BUS = SPLB_CTRL, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_CTRL_DWIDTH/8)-1)], BUS = SPLB_CTRL, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB_CTRL, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB_CTRL, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_CTRL_DWIDTH-1)], BUS = SPLB_CTRL, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_wait = Sl_wait, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_CTRL_DWIDTH-1)], BUS = SPLB_CTRL, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_CTRL_NUM_MASTERS-1)], BUS = SPLB_CTRL, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_CTRL_NUM_MASTERS-1)], BUS = SPLB_CTRL, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_CTRL_NUM_MASTERS-1)], BUS = SPLB_CTRL, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB_CTRL, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_abort = PLB_abort, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB_CTRL, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB_CTRL, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_CTRL_NUM_MASTERS-1)], BUS = SPLB_CTRL, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_ARESETN = ARESETN, DIR = I, BUS = S_AXI_CTRL, SIGIS = RST, ASSIGNMENT = OPTIONAL, ISVALID = (C_INTERCONNECT == 2), DEFAULT = ARESETN, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_AWADDR = AWADDR, DIR = I, BUS = S_AXI_CTRL, VEC = [(C_S_AXI_CTRL_ADDR_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = AWADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_AWVALID = AWVALID, DIR = I, BUS = S_AXI_CTRL, DEFAULT = AWVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_AWREADY = AWREADY, DIR = O, BUS = S_AXI_CTRL, DEFAULT = AWREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_WDATA = WDATA, DIR = I, BUS = S_AXI_CTRL, VEC = [(C_S_AXI_CTRL_DATA_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = WDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_WSTRB = WSTRB, DIR = I, BUS = S_AXI_CTRL, VEC = [((C_S_AXI_CTRL_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, DEFAULT = WSTRB, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_WVALID = WVALID, DIR = I, BUS = S_AXI_CTRL, DEFAULT = WVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_WREADY = WREADY, DIR = O, BUS = S_AXI_CTRL, DEFAULT = WREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_BRESP = BRESP, DIR = O, BUS = S_AXI_CTRL, VEC = [1:0], DEFAULT = BRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_BVALID = BVALID, DIR = O, BUS = S_AXI_CTRL, DEFAULT = BVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_BREADY = BREADY, DIR = I, BUS = S_AXI_CTRL, DEFAULT = BREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_ARADDR = ARADDR, DIR = I, BUS = S_AXI_CTRL, VEC = [(C_S_AXI_CTRL_ADDR_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = ARADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_ARVALID = ARVALID, DIR = I, BUS = S_AXI_CTRL, DEFAULT = ARVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_ARREADY = ARREADY, DIR = O, BUS = S_AXI_CTRL, DEFAULT = ARREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_RDATA = RDATA, DIR = O, BUS = S_AXI_CTRL, VEC = [(C_S_AXI_CTRL_DATA_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = RDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_RRESP = RRESP, DIR = O, BUS = S_AXI_CTRL, VEC = [1:0], DEFAULT = RRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_RVALID = RVALID, DIR = O, BUS = S_AXI_CTRL, DEFAULT = RVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_RREADY = RREADY, DIR = I, BUS = S_AXI_CTRL, DEFAULT = RREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
END

BEGIN lmb_bram_if_cntlr
 PARAMETER INSTANCE = ilmb_cntlr
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_MASTERS = none, DT = string, TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Masters that can talk to this slave, LONG_DESC = The '&' separated list of master interfaces that can access this slave, GUI_PERMIT = , BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = none, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_IS_ACLK_ASYNC = 0, DT = integer, RANGE = (0, 1), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Is ACLK Asynchronous to Interconnect_ACLK, LONG_DESC = Is ACLK asynchronous with respect to the interconnect's ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_ACLK_RATIO = 1, DT = integer, TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = UPDATE, DESC = ACLK Frequency Ratio, LONG_DESC = In relation to C_INTERCONNECT_ACLK_RATIO on the interconnect, indicates the ratio of the ACLK frequency of this bus interface to the frequency of Interconnect_ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_SECURE = 0, DT = integer, RANGE = (0,1), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Require TrustZone Secure on all accesses, LONG_DESC = All accesses to slave required to be secure, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_AW_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AW channel, LONG_DESC = Insert register slice on AW channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_AR_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AR channel, LONG_DESC = Insert register slice on AR channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_W_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on W channel, LONG_DESC = Insert register slice on W channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_R_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on R channel, LONG_DESC = Insert register slice on R channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_B_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on B channel, LONG_DESC = Insert register slice on B channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_WRITE_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Write Data FIFO Depth, LONG_DESC = Depth of bus interface write data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_READ_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Read Data FIFO Depth, LONG_DESC = Depth of bus interface read data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_WRITE_ACCEPTANCE = 1, DT = integer, RANGE = (1, 2, 4, 8, 16, 32), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Write Transaction Acceptance Limit, LONG_DESC = Maximum number of active write transactions that the bus interface can accept. This parameter is ignored when the IP is connected to an interconnect in SASD mode., GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_CTRL_READ_ACCEPTANCE = 1, DT = integer, RANGE = (1, 2, 4, 8, 16, 32), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Read Transaction Acceptance Limit, LONG_DESC = Maximum number of active read transactions that the bus interface can accept. This parameter is ignored when the IP is connected to an interconnect in SASD mode., GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI_CTRL, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = (C_INTERCONNECT == 2), RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_ADDED_AXI_PARAMS = TRUE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_S_AXI_CTRL_AXI_VER = 1.01.a, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_BASEADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SLMB:SLMB1:SLMB2:SLMB3, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x800, ADDR_TYPE = MEMORY, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, MHS_VALUE = 0x00000000, RESOLVED_BUS = SLMB
 PARAMETER C_HIGHADDR = 0x0000ffff, DT = std_logic_vector(0 to 31), BUS = SLMB:SLMB1:SLMB2:SLMB3, ADDRESS = HIGH, PAIR = C_BASEADDR, ADDR_TYPE = MEMORY, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x0000ffff, RESOLVED_BUS = SLMB
 PARAMETER C_FAMILY = virtex5, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_MASK = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask_0, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00800000
 PARAMETER C_MASK1 = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask_1, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_LMB > 1), TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00800000
 PARAMETER C_MASK2 = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask_2, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_LMB > 2), TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00800000
 PARAMETER C_MASK3 = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask_3, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_LMB > 3), TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00800000
 PARAMETER C_LMB_AWIDTH = 32, DT = integer, BUS = SLMB, RANGE = (32:32), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = LMB_ABus:LMB1_ABus:LMB2_ABus:LMB3_ABus:BRAM_Addr_A, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SLMB
 PARAMETER C_LMB_DWIDTH = 32, DT = integer, BUS = SLMB, RANGE = (32:32), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = LMB_WriteDBus:LMB_BE:Sl_DBus:LMB1_WriteDBus:LMB1_BE:Sl1_DBus:LMB2_WriteDBus:LMB2_BE:Sl2_DBus:LMB3_WriteDBus:LMB3_BE:Sl3_DBus:BRAM_WEN_A:BRAM_Din_A:BRAM_Dout_A, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SLMB
 PARAMETER C_ECC = 0, DT = integer, RANGE = (0:1), AFFECTS_PORTS_VEC = BRAM_WEN_A:BRAM_Din_A:BRAM_Dout_A, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_INTERCONNECT:C_FAULT_INJECT:C_CE_FAILING_REGISTERS:C_UE_FAILING_REGISTERS:C_ECC_STATUS_REGISTERS:C_ECC_ONOFF_REGISTER:C_ECC_ONOFF_RESET_VALUE:C_CE_COUNTER_WIDTH:C_WRITE_ACCESS, MPD_VALUE = 0
 PARAMETER C_INTERCONNECT = 0, DT = integer, RANGE = (0:2), VALUES = (0=None, 1=PLBv46, 2=AXI), ISVALID = (C_ECC == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_FAULT_INJECT:C_CE_FAILING_REGISTERS:C_UE_FAILING_REGISTERS:C_ECC_STATUS_REGISTERS:C_ECC_ONOFF_REGISTER:C_ECC_ONOFF_RESET_VALUE:C_CE_COUNTER_WIDTH:C_SPLB_CTRL_BASEADDR:C_SPLB_CTRL_HIGHADDR:C_SPLB_CTRL_AWIDTH:C_SPLB_CTRL_DWIDTH:C_SPLB_CTRL_P2P:C_SPLB_CTRL_MID_WIDTH:C_SPLB_CTRL_NUM_MASTERS:C_SPLB_CTRL_SUPPORT_BURSTS:C_SPLB_CTRL_NATIVE_DWIDTH:C_SPLB_CTRL_CLK_FREQ_HZ:C_S_AXI_CTRL_ACLK_FREQ_HZ:C_S_AXI_CTRL_BASEADDR:C_S_AXI_CTRL_HIGHADDR:C_S_AXI_CTRL_ADDR_WIDTH:C_S_AXI_CTRL_DATA_WIDTH:C_S_AXI_CTRL_PROTOCOL, MPD_VALUE = 0
 PARAMETER C_FAULT_INJECT = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0 && C_WRITE_ACCESS != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CE_FAILING_REGISTERS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_UE_FAILING_REGISTERS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_STATUS_REGISTERS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_ONOFF_REGISTER = 0, DT = integer, RANGE = (0:1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_ONOFF_RESET_VALUE = 1, DT = integer, RANGE = (0:1), VALUES = (0=0, 1=1), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_CE_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:31), ISVALID = (C_ECC == 1 && C_INTERCONNECT != 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_WRITE_ACCESS = 2, DT = integer, RANGE = (0:2), VALUES = (0=NONE,1=WORD_ONLY,2=FULL), ISVALID = (C_ECC == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_FAULT_INJECT, MPD_VALUE = 2
 PARAMETER C_NUM_LMB = 1, DT = integer, RANGE = (1:4), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_MASK1:C_MASK2:C_MASK3, MPD_VALUE = 1
 PARAMETER C_SPLB_CTRL_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB_CTRL, ADDRESS = BASE, PAIR = C_SPLB_CTRL_HIGHADDR, ASSIGNMENT = REQUIRE, MIN_SIZE = 0x100, ISVALID = (C_INTERCONNECT == 1), ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB_CTRL, ADDRESS = HIGH, PAIR = C_SPLB_CTRL_BASEADDR, ASSIGNMENT = REQUIRE, ISVALID = (C_INTERCONNECT == 1), ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_AWIDTH = 32, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_DWIDTH = 32, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB_CTRL_PLB_BE:SPLB_CTRL_PLB_wrDBus:SPLB_CTRL_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_P2P = 0, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB_CTRL_PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB_CTRL_Sl_MBusy:SPLB_CTRL_Sl_MWrErr:SPLB_CTRL_Sl_MRdErr:SPLB_CTRL_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB_CTRL, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_INTERCONNECT == 1), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB_CTRL_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB_CTRL, ISVALID = (C_INTERCONNECT == 1), IO_IS = clk_freq, CLK_PORT = LMB_Clk, CLK_UNIT = HZ, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, GUI_PERMIT = , MPD_VALUE = 100000000, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_ACLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = S_AXI_CTRL, ASSIGNMENT = OPTIONAL_UPDATE, IO_IS = clk_freq, CLK_PORT = LMB_Clk, CLK_UNIT = HZ, TYPE = NON_HDL, ISVALID = (C_INTERCONNECT == 2), GUI_PERMIT = , MPD_VALUE = 100000000, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector(31 downto 0), PAIR = C_S_AXI_CTRL_HIGHADDR, ADDRESS = BASE, BUS = S_AXI_CTRL, ASSIGNMENT = REQUIRE, MIN_SIZE = 0x100, ISVALID = (C_INTERCONNECT == 2), ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), PAIR = C_S_AXI_CTRL_BASEADDR, ADDRESS = HIGH, BUS = S_AXI_CTRL, ASSIGNMENT = REQUIRE, ISVALID = (C_INTERCONNECT == 2), ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INTERCONNECT == 2), AFFECTS_PORTS_VEC = S_AXI_CTRL_AWADDR:S_AXI_CTRL_ARADDR, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INTERCONNECT == 2), AFFECTS_PORTS_VEC = S_AXI_CTRL_WDATA:S_AXI_CTRL_WSTRB:S_AXI_CTRL_RDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_S_AXI_CTRL_PROTOCOL = AXI4LITE, DT = STRING, BUS = S_AXI_CTRL, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, ISVALID = (C_INTERCONNECT == 2), GUI_PERMIT = , MPD_VALUE = AXI4LITE, RESOLVED_BUS = 
 PARAMETER HW_VER = 3.10.c
 BUS_INTERFACE SLMB = ilmb, BUS_STD = LMB, BUS_TYPE = SLAVE
 BUS_INTERFACE BRAM_PORT = ilmb_cntlr_BRAM_PORT, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR
 PORT LMB_Rst = LMB_Rst, DIR = I, SIGIS = RST, BUS = SLMB, DEFAULT = LMB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB, DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB, DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB, DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB, DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB, DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB, DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB, DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_Ready = Sl_Ready, DIR = O, BUS = SLMB, DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_Wait = Sl_Wait, DIR = O, BUS = SLMB, DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_UE = Sl_UE, DIR = O, BUS = SLMB, DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT Sl_CE = Sl_CE, DIR = O, BUS = SLMB, DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SLMB
 PORT LMB1_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB1_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_Ready = Sl_Ready, DIR = O, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_Wait = Sl_Wait, DIR = O, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_UE = Sl_UE, DIR = O, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl1_CE = Sl_CE, DIR = O, BUS = SLMB1, ISVALID = (C_NUM_LMB >= 2), DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB2_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_Ready = Sl_Ready, DIR = O, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_Wait = Sl_Wait, DIR = O, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_UE = Sl_UE, DIR = O, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl2_CE = Sl_CE, DIR = O, BUS = SLMB2, ISVALID = (C_NUM_LMB >= 3), DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_WriteDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_AddrStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_ReadStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_WriteStrobe, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LMB3_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = LMB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_Ready = Sl_Ready, DIR = O, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_Ready, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_Wait = Sl_Wait, DIR = O, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_Wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_UE = Sl_UE, DIR = O, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_UE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Sl3_CE = Sl_CE, DIR = O, BUS = SLMB3, ISVALID = (C_NUM_LMB >= 4), DEFAULT = Sl_CE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT BRAM_Rst_A = BRAM_Rst, DIR = O, SIGIS = RST, BUS = BRAM_PORT, DEFAULT = BRAM_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_Clk_A = BRAM_Clk, DIR = O, SIGIS = CLK, BUS = BRAM_PORT, DEFAULT = BRAM_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_EN_A = BRAM_EN, DIR = O, BUS = BRAM_PORT, DEFAULT = BRAM_EN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_WEN_A = BRAM_WEN, DIR = O, VEC = [0:((C_LMB_DWIDTH+8*C_ECC)/8)-1], BUS = BRAM_PORT, DEFAULT = BRAM_WEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_Addr_A = BRAM_Addr, DIR = O, VEC = [0:C_LMB_AWIDTH-1], BUS = BRAM_PORT, DEFAULT = BRAM_Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_Din_A = BRAM_Din, DIR = I, VEC = [0:C_LMB_DWIDTH-1+8*C_ECC], BUS = BRAM_PORT, DEFAULT = BRAM_Din, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT BRAM_Dout_A = BRAM_Dout, DIR = O, VEC = [0:C_LMB_DWIDTH-1+8*C_ECC], BUS = BRAM_PORT, DEFAULT = BRAM_Dout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = BRAM_PORT
 PORT SPLB_CTRL_PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB_CTRL, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_CTRL_MID_WIDTH-1)], BUS = SPLB_CTRL, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_CTRL_DWIDTH/8)-1)], BUS = SPLB_CTRL, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB_CTRL, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB_CTRL, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_CTRL_DWIDTH-1)], BUS = SPLB_CTRL, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_wait = Sl_wait, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_CTRL_DWIDTH-1)], BUS = SPLB_CTRL, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_CTRL_NUM_MASTERS-1)], BUS = SPLB_CTRL, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_CTRL_NUM_MASTERS-1)], BUS = SPLB_CTRL, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_CTRL_NUM_MASTERS-1)], BUS = SPLB_CTRL, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB_CTRL, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_abort = PLB_abort, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB_CTRL, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB_CTRL, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB_CTRL, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB_CTRL, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB_CTRL, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_CTRL_Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_CTRL_NUM_MASTERS-1)], BUS = SPLB_CTRL, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_ARESETN = ARESETN, DIR = I, BUS = S_AXI_CTRL, SIGIS = RST, ASSIGNMENT = OPTIONAL, ISVALID = (C_INTERCONNECT == 2), DEFAULT = ARESETN, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_AWADDR = AWADDR, DIR = I, BUS = S_AXI_CTRL, VEC = [(C_S_AXI_CTRL_ADDR_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = AWADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_AWVALID = AWVALID, DIR = I, BUS = S_AXI_CTRL, DEFAULT = AWVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_AWREADY = AWREADY, DIR = O, BUS = S_AXI_CTRL, DEFAULT = AWREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_WDATA = WDATA, DIR = I, BUS = S_AXI_CTRL, VEC = [(C_S_AXI_CTRL_DATA_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = WDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_WSTRB = WSTRB, DIR = I, BUS = S_AXI_CTRL, VEC = [((C_S_AXI_CTRL_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, DEFAULT = WSTRB, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_WVALID = WVALID, DIR = I, BUS = S_AXI_CTRL, DEFAULT = WVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_WREADY = WREADY, DIR = O, BUS = S_AXI_CTRL, DEFAULT = WREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_BRESP = BRESP, DIR = O, BUS = S_AXI_CTRL, VEC = [1:0], DEFAULT = BRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_BVALID = BVALID, DIR = O, BUS = S_AXI_CTRL, DEFAULT = BVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_BREADY = BREADY, DIR = I, BUS = S_AXI_CTRL, DEFAULT = BREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_ARADDR = ARADDR, DIR = I, BUS = S_AXI_CTRL, VEC = [(C_S_AXI_CTRL_ADDR_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = ARADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_ARVALID = ARVALID, DIR = I, BUS = S_AXI_CTRL, DEFAULT = ARVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_ARREADY = ARREADY, DIR = O, BUS = S_AXI_CTRL, DEFAULT = ARREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_RDATA = RDATA, DIR = O, BUS = S_AXI_CTRL, VEC = [(C_S_AXI_CTRL_DATA_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = RDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_RRESP = RRESP, DIR = O, BUS = S_AXI_CTRL, VEC = [1:0], DEFAULT = RRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_RVALID = RVALID, DIR = O, BUS = S_AXI_CTRL, DEFAULT = RVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_CTRL_RREADY = RREADY, DIR = I, BUS = S_AXI_CTRL, DEFAULT = RREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
END

BEGIN bram_block
 PARAMETER INSTANCE = lmb_bram
 PARAMETER C_MEMSIZE = 2048, DT = integer, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2048
 PARAMETER C_PORT_DWIDTH = 32, DT = integer, BUS = PORTA:PORTB, RANGE = (32, 40, 64, 72, 128, 144, 256, 512, 1024), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = BRAM_Din_A:BRAM_Dout_A:BRAM_Din_B:BRAM_Dout_B, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = PORTA:PORTB
 PARAMETER C_PORT_AWIDTH = 32, DT = integer, BUS = PORTA:PORTB, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = BRAM_Addr_A:BRAM_Addr_B, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = PORTA:PORTB
 PARAMETER C_NUM_WE = 4, DT = integer, RANGE = (1, 2, 4, 5, 8, 9, 16, 18, 32, 64, 128), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = BRAM_WEN_A:BRAM_WEN_B, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_FAMILY = virtex2, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex2
 PARAMETER HW_VER = 1.00.a
 BUS_INTERFACE PORTA = dlmb_port, BUS_STD = XIL_BRAM, BUS_TYPE = TARGET
 BUS_INTERFACE PORTB = ilmb_cntlr_BRAM_PORT, BUS_STD = XIL_BRAM, BUS_TYPE = TARGET
 PORT BRAM_Rst_A = BRAM_Rst, DIR = I, BUS = PORTA, DEFAULT = BRAM_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Clk_A = BRAM_Clk, DIR = I, BUS = PORTA, SIGIS = CLK, DEFAULT = BRAM_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_EN_A = BRAM_EN, DIR = I, BUS = PORTA, DEFAULT = BRAM_EN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_WEN_A = BRAM_WEN, DIR = I, VEC = [0:C_NUM_WE-1], BUS = PORTA, DEFAULT = BRAM_WEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Addr_A = BRAM_Addr, DIR = I, VEC = [0:C_PORT_AWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Din_A = BRAM_Din, DIR = O, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Din, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Dout_A = BRAM_Dout, DIR = I, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Dout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Rst_B = BRAM_Rst, DIR = I, BUS = PORTB, DEFAULT = BRAM_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTB
 PORT BRAM_Clk_B = BRAM_Clk, DIR = I, BUS = PORTB, SIGIS = CLK, DEFAULT = BRAM_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTB
 PORT BRAM_EN_B = BRAM_EN, DIR = I, BUS = PORTB, DEFAULT = BRAM_EN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTB
 PORT BRAM_WEN_B = BRAM_WEN, DIR = I, VEC = [0:C_NUM_WE-1], BUS = PORTB, DEFAULT = BRAM_WEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTB
 PORT BRAM_Addr_B = BRAM_Addr, DIR = I, VEC = [0:C_PORT_AWIDTH-1], BUS = PORTB, DEFAULT = BRAM_Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTB
 PORT BRAM_Din_B = BRAM_Din, DIR = O, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTB, DEFAULT = BRAM_Din, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTB
 PORT BRAM_Dout_B = BRAM_Dout, DIR = I, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTB, DEFAULT = BRAM_Dout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTB
END

BEGIN xps_uartlite
 PARAMETER INSTANCE = RS232
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_SPLB_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB, IO_IS = clk_freq, CLK_PORT = SPLB_Clk, CLK_UNIT = HZ, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 100000000, RESOLVED_BUS = SPLB
 PARAMETER C_BASEADDR = 0x84000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x10, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x84000000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x8400ffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x8400ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_BAUDRATE = 9600, DT = INTEGER, DESC = Baudrate, PERMIT = BASE_USER, VALUES = (110= 110 , 300= 300 , 1200= 1200 , 2400= 2400 , 4800= 4800 , 9600= 9600 , 19200= 19200 , 38400= 38400 , 57600= 57600 , 115200= 115200 , 128000= 128000 , 230400= 230400 , 460800= 460800 , 921600= 921600 ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 9600, MHS_VALUE = 9600
 PARAMETER C_DATA_BITS = 8, DT = INTEGER, RANGE = (5:8), DESC = Num Data Bits, PERMIT = BASE_USER, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8, MHS_VALUE = 8
 PARAMETER C_USE_PARITY = 0, DT = INTEGER, RANGE = (0,1), DESC = Use Parity, PERMIT = BASE_USER, VALUES = (0=FALSE, 1=TRUE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER C_ODD_PARITY = 0, DT = INTEGER, RANGE = (0,1), DESC = Parity Type, PERMIT = BASE_USER, VALUES = (0= EVEN , 1= ODD ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER HW_VER = 1.02.a
 BUS_INTERFACE SPLB = mb_plb, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT RX = fpga_0_RS232_RX_pin, DIR = I, PERMIT = BASE_USER, DESC = 'Serial Data In', IO_IF = uart_0, IO_IS = serial_in, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_RS232_RX_pin
 PORT TX = fpga_0_RS232_TX_pin, DIR = O, PERMIT = BASE_USER, DESC = 'Serial Data Out', IO_IF = uart_0, IO_IS = serial_out, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_RS232_TX_pin
 PORT Interrupt = RS232_Interrupt, DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = LOW, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = RS232_Interrupt
END

BEGIN clock_generator
 PARAMETER INSTANCE = clock_generator_0
 PARAMETER C_FAMILY = virtex6, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT0_VARIABLE_PHASE:C_CLKOUT1_VARIABLE_PHASE:C_CLKOUT2_VARIABLE_PHASE:C_CLKOUT3_VARIABLE_PHASE:C_CLKOUT4_VARIABLE_PHASE:C_CLKOUT5_VARIABLE_PHASE:C_CLKOUT6_VARIABLE_PHASE:C_CLKOUT7_VARIABLE_PHASE:C_CLKOUT8_VARIABLE_PHASE:C_CLKOUT9_VARIABLE_PHASE:C_CLKOUT10_VARIABLE_PHASE:C_CLKOUT11_VARIABLE_PHASE:C_CLKOUT12_VARIABLE_PHASE:C_CLKOUT13_VARIABLE_PHASE:C_CLKOUT14_VARIABLE_PHASE:C_CLKOUT15_VARIABLE_PHASE:C_CLKFBIN_DESKEW:C_CLKFBOUT_PHASE:C_CLKFBOUT_GROUP:C_PSDONE_GROUP:C_CLK_PRIMITIVE_FEEDBACK_BUF, MPD_VALUE = virtex6
 PARAMETER C_DEVICE = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NOT_SET
 PARAMETER C_PACKAGE = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NOT_SET
 PARAMETER C_SPEEDGRADE = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NOT_SET
 PARAMETER C_CLKIN_FREQ = 50000000, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0, MHS_VALUE = 50000000
 PARAMETER C_CLKOUT0_FREQ = 50000000, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT1_FREQ:C_CLKOUT1_PHASE:C_CLKOUT1_GROUP:C_CLKOUT1_BUF:C_CLKOUT1_VARIABLE_PHASE, MPD_VALUE = 0, MHS_VALUE = 50000000
 PARAMETER C_CLKOUT0_PHASE = 0, DT = REAL, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_CLKOUT0_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT0_VARIABLE_PHASE, MPD_VALUE = NONE, MHS_VALUE = NONE
 PARAMETER C_CLKOUT0_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE, MHS_VALUE = TRUE
 PARAMETER C_CLKOUT0_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT0_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq]))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT1_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT0_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT2_FREQ:C_CLKOUT2_PHASE:C_CLKOUT2_GROUP:C_CLKOUT2_BUF:C_CLKOUT2_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT1_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT0_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT1_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT0_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT1_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT1_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT0_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT1_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT0_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT1_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT2_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT1_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT3_FREQ:C_CLKOUT3_PHASE:C_CLKOUT3_GROUP:C_CLKOUT3_BUF:C_CLKOUT3_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT2_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT1_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT2_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT1_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT2_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT2_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT1_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT2_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT1_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT2_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT3_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT2_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT4_FREQ:C_CLKOUT4_PHASE:C_CLKOUT4_GROUP:C_CLKOUT4_BUF:C_CLKOUT4_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT3_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT2_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT3_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT2_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT3_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT3_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT2_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT3_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT2_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT3_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT4_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT3_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT5_FREQ:C_CLKOUT5_PHASE:C_CLKOUT5_GROUP:C_CLKOUT5_BUF:C_CLKOUT5_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT4_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT3_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT4_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT3_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT4_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT4_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT3_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT4_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT3_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT4_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT5_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT4_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT6_FREQ:C_CLKOUT6_PHASE:C_CLKOUT6_GROUP:C_CLKOUT6_BUF:C_CLKOUT6_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT5_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT4_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT5_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT4_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT5_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT5_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT4_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT5_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT4_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT5_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT6_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT5_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT7_FREQ:C_CLKOUT7_PHASE:C_CLKOUT7_GROUP:C_CLKOUT7_BUF:C_CLKOUT7_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT6_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT5_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT6_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT5_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT6_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT6_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT5_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT6_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT5_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT6_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT7_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT6_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT8_FREQ:C_CLKOUT8_PHASE:C_CLKOUT8_GROUP:C_CLKOUT8_BUF:C_CLKOUT8_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT7_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT6_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT7_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT6_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT7_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT7_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT6_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT7_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT6_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT7_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT8_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT7_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT9_FREQ:C_CLKOUT9_PHASE:C_CLKOUT9_GROUP:C_CLKOUT9_BUF:C_CLKOUT9_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT8_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT7_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT8_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT7_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT8_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT8_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT7_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT8_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT7_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT8_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT9_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT8_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT10_FREQ:C_CLKOUT10_PHASE:C_CLKOUT10_GROUP:C_CLKOUT10_BUF:C_CLKOUT10_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT9_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT8_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT9_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT8_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT9_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT9_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT8_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT9_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT8_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT9_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT10_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT9_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT11_FREQ:C_CLKOUT11_PHASE:C_CLKOUT11_GROUP:C_CLKOUT11_BUF:C_CLKOUT11_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT10_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT9_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT10_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT9_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT10_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT10_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT9_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT10_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT9_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT10_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT11_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT10_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT12_FREQ:C_CLKOUT12_PHASE:C_CLKOUT12_GROUP:C_CLKOUT12_BUF:C_CLKOUT12_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT11_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT10_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT11_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT10_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT11_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT11_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT10_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT11_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT10_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT11_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT12_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT11_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT13_FREQ:C_CLKOUT13_PHASE:C_CLKOUT13_GROUP:C_CLKOUT13_BUF:C_CLKOUT13_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT12_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT11_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT12_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT11_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT12_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT12_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT11_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT12_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT11_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT12_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT13_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT12_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT14_FREQ:C_CLKOUT14_PHASE:C_CLKOUT14_GROUP:C_CLKOUT14_BUF:C_CLKOUT14_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT13_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT12_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT13_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT12_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT13_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT13_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT12_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT13_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT12_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT13_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT14_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT13_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT15_FREQ:C_CLKOUT15_PHASE:C_CLKOUT15_GROUP:C_CLKOUT15_BUF:C_CLKOUT15_VARIABLE_PHASE, MPD_VALUE = 0
 PARAMETER C_CLKOUT14_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT13_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT14_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT13_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT14_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT14_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT13_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT14_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT13_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT14_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT15_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ISVALID = (C_CLKOUT14_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT15_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = (C_CLKOUT14_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT15_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = (C_CLKOUT14_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_CLKOUT15_VARIABLE_PHASE, MPD_VALUE = NONE
 PARAMETER C_CLKOUT15_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = (C_CLKOUT14_FREQ > 0), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT15_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ((C_CLKOUT14_FREQ > 0) && ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || (![xstrncmp C_CLKOUT15_GROUP PLLE0] && ([xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq])))), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKFBIN_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKFBIN_DESKEW = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKOUT6=CLKOUT6, CLKOUT7=CLKOUT7, CLKOUT8=CLKOUT8, CLKOUT9=CLKOUT9, CLKOUT10=CLKOUT10, CLKOUT11=CLKOUT11, CLKOUT12=CLKOUT12, CLKOUT13=CLKOUT13, CLKOUT14=CLKOUT14, CLKOUT15=CLKOUT15), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || [xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq]), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKFBOUT_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKFBOUT_PHASE = 0, DT = REAL, TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || [xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq]), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKFBOUT_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, PLLE0=PLLE0), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || [xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq]), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKFBOUT_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_PSDONE_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, MMCM0_FB=MMCM0_FB, MMCM1_FB=MMCM1_FB, MMCM2_FB=MMCM2_FB, MMCM3_FB=MMCM3_FB), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || [xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq]), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_EXT_RESET_HIGH = 0, DT = INTEGER, VALUES = (0=0, 1=1), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER C_CLK_PRIMITIVE_FEEDBACK_BUF = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l] || [xstrncmp C_FAMILY virtex6lx] || [xstrncmp C_FAMILY virtex6sx] || [xstrncmp C_FAMILY virtex6hx] || [xstrncmp C_FAMILY virtex6cx] || [xstrncmp C_FAMILY virtex6llx] || [xstrncmp C_FAMILY virtex6lsx] || [xstrncmp C_FAMILY qvirtex6] || [xstrncmp C_FAMILY qvirtex6l] || [xstrncmp C_FAMILY qvirtex6lx] || [xstrncmp C_FAMILY qvirtex6sx] || [xstrncmp C_FAMILY qvirtex6fx] || [xstrncmp C_FAMILY qvirtex6tx] || [xstrncmp C_FAMILY virtex7] || [xstrncmp C_FAMILY kintex7] || [xstrncmp C_FAMILY artix7] || [xstrncmp C_FAMILY zynq]), ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT7_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT8_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT9_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT10_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT11_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT12_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT13_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT14_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLKOUT15_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_CLK_GEN = UPDATE, VALUES = (UPDATE=UPDATE, PASSED=PASSED, FAILED=FAILED), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = UPDATE
 PARAMETER HW_VER = 4.03.a
 PORT CLKIN = CLK_S, DIR = I, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = CLK_S
 PORT CLKOUT0 = clk_50_0000MHz, DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT0_FREQ / C_CLKIN_FREQ, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_50_0000MHz
 PORT RST = sys_rst_s, DIR = I, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_rst_s
 PORT LOCKED = Dcm_all_locked, DIR = O, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = Dcm_all_locked
END

BEGIN mdm
 PARAMETER INSTANCE = mdm_0
 PARAMETER C_INTERCONNECT_S_AXI_MASTERS = none, DT = string, TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Masters that can talk to this slave, LONG_DESC = The '&' separated list of master interfaces that can access this slave, GUI_PERMIT = , BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = none, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_IS_ACLK_ASYNC = 0, DT = integer, RANGE = (0, 1), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Is ACLK Asynchronous to Interconnect_ACLK, LONG_DESC = Is ACLK asynchronous with respect to the interconnect's ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_ACLK_RATIO = 1, DT = integer, TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = UPDATE, DESC = ACLK Frequency Ratio, LONG_DESC = In relation to C_INTERCONNECT_ACLK_RATIO on the interconnect, indicates the ratio of the ACLK frequency of this bus interface to the frequency of Interconnect_ACLK. Please refer to the online help on how this parameter is computed, GUI_PERMIT = , BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_SECURE = 0, DT = integer, RANGE = (0,1), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Require TrustZone Secure on all accesses, LONG_DESC = All accesses to slave required to be secure, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_AW_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AW channel, LONG_DESC = Insert register slice on AW channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_AR_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on AR channel, LONG_DESC = Insert register slice on AR channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_W_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on W channel, LONG_DESC = Insert register slice on W channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_R_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on R channel, LONG_DESC = Insert register slice on R channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_B_REGISTER = 0, DT = integer, RANGE = (0:8), VALUES = ( 0 = BYPASS, 8 = AUTOMATIC, 1 = FULLY_REGISTERED, 7 = LIGHT_WEIGHT), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Use register slice on B channel, LONG_DESC = Insert register slice on B channel, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_WRITE_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Write Data FIFO Depth, LONG_DESC = Depth of bus interface write data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_READ_FIFO_DEPTH = 0, DT = integer, RANGE = (0, 32, 512), VALUES = ( 0 = 0 (None), 32 = 32 (SRL), 512 = 512 (BRAM)), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL, DESC = Read Data FIFO Depth, LONG_DESC = Depth of bus interface read data FIFO, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 0, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_WRITE_ACCEPTANCE = 1, DT = integer, RANGE = (1, 2, 4, 8, 16, 32), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Write Transaction Acceptance Limit, LONG_DESC = Maximum number of active write transactions that the bus interface can accept. This parameter is ignored when the IP is connected to an interconnect in SASD mode., GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_INTERCONNECT_S_AXI_READ_ACCEPTANCE = 1, DT = integer, RANGE = (1, 2, 4, 8, 16, 32), TYPE = NON_MPD, ASSOCIATION = SLAVE, ASSIGNMENT = OPTIONAL_UPDATE, DESC = Read Transaction Acceptance Limit, LONG_DESC = Maximum number of active read transactions that the bus interface can accept. This parameter is ignored when the IP is connected to an interconnect in SASD mode., GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, BUS = S_AXI, AXI_VER = 1.01.a, BUS_TYPE = SLAVE, MPD_VALUE = 1, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), RESOLVED_BUS = 
 PARAMETER C_S_AXI_ADDED_AXI_PARAMS = TRUE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_S_AXI_AXI_VER = 1.01.a, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
 PARAMETER C_FAMILY = virtex6, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_JTAG_CHAIN, MPD_VALUE = virtex6
 PARAMETER C_JTAG_CHAIN = 2, DT = INTEGER, RANGE = (1:4), VALUES = (1=USER1, 2=USER2, 3=USER3, 4=USER4), ISVALID = (([xstrncmp C_FAMILY  virtex4 ]) || ([xstrncmp C_FAMILY  virtex5 ]) || ([xstrncmp C_FAMILY  spartan6 ]) || ([xstrncmp C_FAMILY  virtex6 ])), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2
 PARAMETER C_INTERCONNECT = 1, DT = INTEGER, RANGE = (1,2), VALUES = (1=PLBv46, 2=AXI), ISVALID = (C_USE_UART == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SPLB_AWIDTH:C_SPLB_DWIDTH:C_SPLB_P2P:C_SPLB_MID_WIDTH:C_SPLB_NUM_MASTERS:C_SPLB_NATIVE_DWIDTH:C_SPLB_SUPPORT_BURSTS:C_S_AXI_ADDR_WIDTH:C_S_AXI_DATA_WIDTH:C_S_AXI_PROTOCOL, MPD_VALUE = 1
 PARAMETER C_BASEADDR = 0x84400000, DT = STD_LOGIC_VECTOR, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = SPLB:S_AXI, MIN_SIZE = 0x100, ISVALID = (C_USE_UART == 1), ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, MHS_VALUE = 0x84400000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x8440ffff, DT = STD_LOGIC_VECTOR, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = SPLB:S_AXI, ISVALID = (C_USE_UART == 1), ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x8440ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1)), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1)), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1)), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1)), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1)), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 8, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1)), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNEMNT = CONSTANT, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1)), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_MB_DBG_PORTS = 1, DT = INTEGER, RANGE = (0:32), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 1
 PARAMETER C_USE_UART = 1, DT = INTEGER, RANGE = (0:1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_INTERCONNECT:C_BASEADDR:C_HIGHADDR:C_SPLB_AWIDTH:C_SPLB_DWIDTH:C_SPLB_P2P:C_SPLB_MID_WIDTH:C_SPLB_NUM_MASTERS:C_SPLB_NATIVE_DWIDTH:C_SPLB_SUPPORT_BURSTS:C_S_AXI_ADDR_WIDTH:C_S_AXI_DATA_WIDTH:C_S_AXI_PROTOCOL, MPD_VALUE = 1, MHS_VALUE = 1
 PARAMETER C_USE_BSCAN = 0, DT = integer, RANGE = (0:2), VALUES = (0=INTERNAL, 1=ICON, 2=EXTERNAL), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), AFFECTS_PORTS_VEC = S_AXI_AWADDR:S_AXI_ARADDR, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), AFFECTS_PORTS_VEC = S_AXI_WDATA:S_AXI_WSTRB:S_AXI_RDATA, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, DT = STRING, BUS = S_AXI, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, ISVALID = ((C_INTERCONNECT == 2) && (C_USE_UART == 1)), GUI_PERMIT = , MPD_VALUE = AXI4LITE, RESOLVED_BUS = 
 PARAMETER HW_VER = 2.10.a
 BUS_INTERFACE SPLB = mb_plb, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
 BUS_INTERFACE MBDEBUG_0 = microblaze_0_mdm_bus, BUS_STD = XIL_MBDEBUG3, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 1)
 PORT Debug_SYS_Rst = Debug_SYS_Rst, DIR = O, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = Debug_SYS_Rst
 PORT Ext_BRK = Ext_BRK, DIR = O, DEFAULT = Ext_BRK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Ext_NM_BRK = Ext_NM_BRK, DIR = O, DEFAULT = Ext_NM_BRK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI, ASSIGNMENT = OPTIONAL, DEFAULT = ARESETN, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_AWADDR = AWADDR, DIR = I, BUS = S_AXI, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = AWADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI, DEFAULT = AWVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI, DEFAULT = AWREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_WDATA = WDATA, DIR = I, BUS = S_AXI, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = WDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_WSTRB = WSTRB, DIR = I, BUS = S_AXI, VEC = [(C_S_AXI_DATA_WIDTH/8-1):0], ENDIAN = LITTLE, DEFAULT = WSTRB, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI, DEFAULT = WVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI, DEFAULT = WREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_BRESP = BRESP, DIR = O, BUS = S_AXI, VEC = [1:0], DEFAULT = BRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI, DEFAULT = BVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI, DEFAULT = BREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_ARADDR = ARADDR, DIR = I, BUS = S_AXI, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = ARADDR, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI, DEFAULT = ARVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI, DEFAULT = ARREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_RDATA = RDATA, DIR = O, BUS = S_AXI, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, DEFAULT = RDATA, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_RRESP = RRESP, DIR = O, BUS = S_AXI, VEC = [1:0], DEFAULT = RRESP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI, DEFAULT = RVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI, DEFAULT = RREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB, VEC = [0:(C_SPLB_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, BUS = SPLB, VEC = [0:((C_SPLB_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, BUS = SPLB, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, BUS = SPLB, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB, VEC = [0:(C_SPLB_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Dbg_Clk_0 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_0, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MBDEBUG_0
 PORT Dbg_TDI_0 = Dbg_TDI, DIR = O, BUS = MBDEBUG_0, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MBDEBUG_0
 PORT Dbg_TDO_0 = Dbg_TDO, DIR = I, BUS = MBDEBUG_0, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MBDEBUG_0
 PORT Dbg_Reg_En_0 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_0, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MBDEBUG_0
 PORT Dbg_Capture_0 = Dbg_Capture, DIR = O, BUS = MBDEBUG_0, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MBDEBUG_0
 PORT Dbg_Shift_0 = Dbg_Shift, DIR = O, BUS = MBDEBUG_0, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MBDEBUG_0
 PORT Dbg_Update_0 = Dbg_Update, DIR = O, BUS = MBDEBUG_0, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MBDEBUG_0
 PORT Dbg_Rst_0 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_0, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MBDEBUG_0
 PORT Dbg_Clk_1 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_1, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_1 = Dbg_TDI, DIR = O, BUS = MBDEBUG_1, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_1 = Dbg_TDO, DIR = I, BUS = MBDEBUG_1, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_1 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_1, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_1 = Dbg_Capture, DIR = O, BUS = MBDEBUG_1, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_1 = Dbg_Shift, DIR = O, BUS = MBDEBUG_1, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_1 = Dbg_Update, DIR = O, BUS = MBDEBUG_1, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_1 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_1, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_2 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_2, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_2 = Dbg_TDI, DIR = O, BUS = MBDEBUG_2, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_2 = Dbg_TDO, DIR = I, BUS = MBDEBUG_2, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_2 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_2, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_2 = Dbg_Capture, DIR = O, BUS = MBDEBUG_2, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_2 = Dbg_Shift, DIR = O, BUS = MBDEBUG_2, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_2 = Dbg_Update, DIR = O, BUS = MBDEBUG_2, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_2 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_2, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_3 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_3, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_3 = Dbg_TDI, DIR = O, BUS = MBDEBUG_3, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_3 = Dbg_TDO, DIR = I, BUS = MBDEBUG_3, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_3 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_3, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_3 = Dbg_Capture, DIR = O, BUS = MBDEBUG_3, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_3 = Dbg_Shift, DIR = O, BUS = MBDEBUG_3, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_3 = Dbg_Update, DIR = O, BUS = MBDEBUG_3, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_3 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_3, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_4 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_4, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_4 = Dbg_TDI, DIR = O, BUS = MBDEBUG_4, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_4 = Dbg_TDO, DIR = I, BUS = MBDEBUG_4, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_4 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_4, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_4 = Dbg_Capture, DIR = O, BUS = MBDEBUG_4, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_4 = Dbg_Shift, DIR = O, BUS = MBDEBUG_4, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_4 = Dbg_Update, DIR = O, BUS = MBDEBUG_4, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_4 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_4, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_5 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_5, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_5 = Dbg_TDI, DIR = O, BUS = MBDEBUG_5, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_5 = Dbg_TDO, DIR = I, BUS = MBDEBUG_5, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_5 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_5, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_5 = Dbg_Capture, DIR = O, BUS = MBDEBUG_5, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_5 = Dbg_Shift, DIR = O, BUS = MBDEBUG_5, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_5 = Dbg_Update, DIR = O, BUS = MBDEBUG_5, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_5 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_5, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_6 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_6, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_6 = Dbg_TDI, DIR = O, BUS = MBDEBUG_6, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_6 = Dbg_TDO, DIR = I, BUS = MBDEBUG_6, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_6 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_6, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_6 = Dbg_Capture, DIR = O, BUS = MBDEBUG_6, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_6 = Dbg_Shift, DIR = O, BUS = MBDEBUG_6, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_6 = Dbg_Update, DIR = O, BUS = MBDEBUG_6, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_6 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_6, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_7 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_7, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_7 = Dbg_TDI, DIR = O, BUS = MBDEBUG_7, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_7 = Dbg_TDO, DIR = I, BUS = MBDEBUG_7, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_7 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_7, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_7 = Dbg_Capture, DIR = O, BUS = MBDEBUG_7, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_7 = Dbg_Shift, DIR = O, BUS = MBDEBUG_7, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_7 = Dbg_Update, DIR = O, BUS = MBDEBUG_7, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_7 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_7, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_8 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_8, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_8 = Dbg_TDI, DIR = O, BUS = MBDEBUG_8, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_8 = Dbg_TDO, DIR = I, BUS = MBDEBUG_8, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_8 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_8, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_8 = Dbg_Capture, DIR = O, BUS = MBDEBUG_8, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_8 = Dbg_Shift, DIR = O, BUS = MBDEBUG_8, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_8 = Dbg_Update, DIR = O, BUS = MBDEBUG_8, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_8 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_8, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_9 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_9, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_9 = Dbg_TDI, DIR = O, BUS = MBDEBUG_9, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_9 = Dbg_TDO, DIR = I, BUS = MBDEBUG_9, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_9 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_9, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_9 = Dbg_Capture, DIR = O, BUS = MBDEBUG_9, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_9 = Dbg_Shift, DIR = O, BUS = MBDEBUG_9, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_9 = Dbg_Update, DIR = O, BUS = MBDEBUG_9, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_9 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_9, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_10 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_10, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_10 = Dbg_TDI, DIR = O, BUS = MBDEBUG_10, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_10 = Dbg_TDO, DIR = I, BUS = MBDEBUG_10, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_10 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_10, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_10 = Dbg_Capture, DIR = O, BUS = MBDEBUG_10, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_10 = Dbg_Shift, DIR = O, BUS = MBDEBUG_10, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_10 = Dbg_Update, DIR = O, BUS = MBDEBUG_10, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_10 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_10, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_11 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_11, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_11 = Dbg_TDI, DIR = O, BUS = MBDEBUG_11, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_11 = Dbg_TDO, DIR = I, BUS = MBDEBUG_11, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_11 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_11, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_11 = Dbg_Capture, DIR = O, BUS = MBDEBUG_11, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_11 = Dbg_Shift, DIR = O, BUS = MBDEBUG_11, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_11 = Dbg_Update, DIR = O, BUS = MBDEBUG_11, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_11 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_11, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_12 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_12, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_12 = Dbg_TDI, DIR = O, BUS = MBDEBUG_12, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_12 = Dbg_TDO, DIR = I, BUS = MBDEBUG_12, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_12 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_12, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_12 = Dbg_Capture, DIR = O, BUS = MBDEBUG_12, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_12 = Dbg_Shift, DIR = O, BUS = MBDEBUG_12, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_12 = Dbg_Update, DIR = O, BUS = MBDEBUG_12, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_12 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_12, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_13 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_13, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_13 = Dbg_TDI, DIR = O, BUS = MBDEBUG_13, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_13 = Dbg_TDO, DIR = I, BUS = MBDEBUG_13, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_13 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_13, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_13 = Dbg_Capture, DIR = O, BUS = MBDEBUG_13, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_13 = Dbg_Shift, DIR = O, BUS = MBDEBUG_13, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_13 = Dbg_Update, DIR = O, BUS = MBDEBUG_13, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_13 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_13, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_14 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_14, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_14 = Dbg_TDI, DIR = O, BUS = MBDEBUG_14, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_14 = Dbg_TDO, DIR = I, BUS = MBDEBUG_14, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_14 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_14, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_14 = Dbg_Capture, DIR = O, BUS = MBDEBUG_14, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_14 = Dbg_Shift, DIR = O, BUS = MBDEBUG_14, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_14 = Dbg_Update, DIR = O, BUS = MBDEBUG_14, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_14 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_14, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_15 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_15, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_15 = Dbg_TDI, DIR = O, BUS = MBDEBUG_15, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_15 = Dbg_TDO, DIR = I, BUS = MBDEBUG_15, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_15 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_15, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_15 = Dbg_Capture, DIR = O, BUS = MBDEBUG_15, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_15 = Dbg_Shift, DIR = O, BUS = MBDEBUG_15, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_15 = Dbg_Update, DIR = O, BUS = MBDEBUG_15, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_15 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_15, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_16 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_16, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_16 = Dbg_TDI, DIR = O, BUS = MBDEBUG_16, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_16 = Dbg_TDO, DIR = I, BUS = MBDEBUG_16, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_16 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_16, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_16 = Dbg_Capture, DIR = O, BUS = MBDEBUG_16, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_16 = Dbg_Shift, DIR = O, BUS = MBDEBUG_16, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_16 = Dbg_Update, DIR = O, BUS = MBDEBUG_16, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_16 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_16, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_17 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_17, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_17 = Dbg_TDI, DIR = O, BUS = MBDEBUG_17, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_17 = Dbg_TDO, DIR = I, BUS = MBDEBUG_17, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_17 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_17, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_17 = Dbg_Capture, DIR = O, BUS = MBDEBUG_17, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_17 = Dbg_Shift, DIR = O, BUS = MBDEBUG_17, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_17 = Dbg_Update, DIR = O, BUS = MBDEBUG_17, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_17 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_17, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_18 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_18, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_18 = Dbg_TDI, DIR = O, BUS = MBDEBUG_18, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_18 = Dbg_TDO, DIR = I, BUS = MBDEBUG_18, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_18 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_18, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_18 = Dbg_Capture, DIR = O, BUS = MBDEBUG_18, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_18 = Dbg_Shift, DIR = O, BUS = MBDEBUG_18, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_18 = Dbg_Update, DIR = O, BUS = MBDEBUG_18, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_18 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_18, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_19 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_19, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_19 = Dbg_TDI, DIR = O, BUS = MBDEBUG_19, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_19 = Dbg_TDO, DIR = I, BUS = MBDEBUG_19, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_19 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_19, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_19 = Dbg_Capture, DIR = O, BUS = MBDEBUG_19, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_19 = Dbg_Shift, DIR = O, BUS = MBDEBUG_19, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_19 = Dbg_Update, DIR = O, BUS = MBDEBUG_19, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_19 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_19, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_20 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_20, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_20 = Dbg_TDI, DIR = O, BUS = MBDEBUG_20, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_20 = Dbg_TDO, DIR = I, BUS = MBDEBUG_20, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_20 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_20, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_20 = Dbg_Capture, DIR = O, BUS = MBDEBUG_20, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_20 = Dbg_Shift, DIR = O, BUS = MBDEBUG_20, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_20 = Dbg_Update, DIR = O, BUS = MBDEBUG_20, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_20 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_20, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_21 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_21, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_21 = Dbg_TDI, DIR = O, BUS = MBDEBUG_21, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_21 = Dbg_TDO, DIR = I, BUS = MBDEBUG_21, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_21 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_21, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_21 = Dbg_Capture, DIR = O, BUS = MBDEBUG_21, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_21 = Dbg_Shift, DIR = O, BUS = MBDEBUG_21, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_21 = Dbg_Update, DIR = O, BUS = MBDEBUG_21, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_21 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_21, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_22 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_22, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_22 = Dbg_TDI, DIR = O, BUS = MBDEBUG_22, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_22 = Dbg_TDO, DIR = I, BUS = MBDEBUG_22, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_22 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_22, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_22 = Dbg_Capture, DIR = O, BUS = MBDEBUG_22, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_22 = Dbg_Shift, DIR = O, BUS = MBDEBUG_22, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_22 = Dbg_Update, DIR = O, BUS = MBDEBUG_22, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_22 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_22, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_23 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_23, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_23 = Dbg_TDI, DIR = O, BUS = MBDEBUG_23, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_23 = Dbg_TDO, DIR = I, BUS = MBDEBUG_23, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_23 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_23, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_23 = Dbg_Capture, DIR = O, BUS = MBDEBUG_23, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_23 = Dbg_Shift, DIR = O, BUS = MBDEBUG_23, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_23 = Dbg_Update, DIR = O, BUS = MBDEBUG_23, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_23 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_23, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_24 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_24, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_24 = Dbg_TDI, DIR = O, BUS = MBDEBUG_24, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_24 = Dbg_TDO, DIR = I, BUS = MBDEBUG_24, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_24 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_24, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_24 = Dbg_Capture, DIR = O, BUS = MBDEBUG_24, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_24 = Dbg_Shift, DIR = O, BUS = MBDEBUG_24, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_24 = Dbg_Update, DIR = O, BUS = MBDEBUG_24, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_24 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_24, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_25 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_25, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_25 = Dbg_TDI, DIR = O, BUS = MBDEBUG_25, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_25 = Dbg_TDO, DIR = I, BUS = MBDEBUG_25, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_25 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_25, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_25 = Dbg_Capture, DIR = O, BUS = MBDEBUG_25, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_25 = Dbg_Shift, DIR = O, BUS = MBDEBUG_25, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_25 = Dbg_Update, DIR = O, BUS = MBDEBUG_25, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_25 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_25, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_26 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_26, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_26 = Dbg_TDI, DIR = O, BUS = MBDEBUG_26, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_26 = Dbg_TDO, DIR = I, BUS = MBDEBUG_26, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_26 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_26, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_26 = Dbg_Capture, DIR = O, BUS = MBDEBUG_26, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_26 = Dbg_Shift, DIR = O, BUS = MBDEBUG_26, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_26 = Dbg_Update, DIR = O, BUS = MBDEBUG_26, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_26 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_26, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_27 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_27, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_27 = Dbg_TDI, DIR = O, BUS = MBDEBUG_27, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_27 = Dbg_TDO, DIR = I, BUS = MBDEBUG_27, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_27 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_27, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_27 = Dbg_Capture, DIR = O, BUS = MBDEBUG_27, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_27 = Dbg_Shift, DIR = O, BUS = MBDEBUG_27, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_27 = Dbg_Update, DIR = O, BUS = MBDEBUG_27, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_27 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_27, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_28 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_28, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_28 = Dbg_TDI, DIR = O, BUS = MBDEBUG_28, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_28 = Dbg_TDO, DIR = I, BUS = MBDEBUG_28, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_28 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_28, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_28 = Dbg_Capture, DIR = O, BUS = MBDEBUG_28, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_28 = Dbg_Shift, DIR = O, BUS = MBDEBUG_28, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_28 = Dbg_Update, DIR = O, BUS = MBDEBUG_28, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_28 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_28, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_29 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_29, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_29 = Dbg_TDI, DIR = O, BUS = MBDEBUG_29, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_29 = Dbg_TDO, DIR = I, BUS = MBDEBUG_29, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_29 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_29, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_29 = Dbg_Capture, DIR = O, BUS = MBDEBUG_29, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_29 = Dbg_Shift, DIR = O, BUS = MBDEBUG_29, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_29 = Dbg_Update, DIR = O, BUS = MBDEBUG_29, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_29 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_29, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_30 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_30, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_30 = Dbg_TDI, DIR = O, BUS = MBDEBUG_30, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_30 = Dbg_TDO, DIR = I, BUS = MBDEBUG_30, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_30 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_30, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_30 = Dbg_Capture, DIR = O, BUS = MBDEBUG_30, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_30 = Dbg_Shift, DIR = O, BUS = MBDEBUG_30, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_30 = Dbg_Update, DIR = O, BUS = MBDEBUG_30, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_30 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_30, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Clk_31 = Dbg_Clk, DIR = O, SIGIS = CLK, BUS = MBDEBUG_31, DEFAULT = Dbg_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDI_31 = Dbg_TDI, DIR = O, BUS = MBDEBUG_31, DEFAULT = Dbg_TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_TDO_31 = Dbg_TDO, DIR = I, BUS = MBDEBUG_31, DEFAULT = Dbg_TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Reg_En_31 = Dbg_Reg_En, DIR = O, BUS = MBDEBUG_31, VEC = [0:7], DEFAULT = Dbg_Reg_En, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Capture_31 = Dbg_Capture, DIR = O, BUS = MBDEBUG_31, DEFAULT = Dbg_Capture, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Shift_31 = Dbg_Shift, DIR = O, BUS = MBDEBUG_31, DEFAULT = Dbg_Shift, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Update_31 = Dbg_Update, DIR = O, BUS = MBDEBUG_31, DEFAULT = Dbg_Update, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dbg_Rst_31 = Debug_Rst, DIR = O, SIGIS = RST, BUS = MBDEBUG_31, DEFAULT = Debug_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Ext_JTAG_DRCK = DRCK, DIR = O, SIGIS = CLK, BUS = XMTC, DEFAULT = DRCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Ext_JTAG_RESET = RESET, DIR = O, SIGIS = RST, BUS = XMTC, DEFAULT = RESET, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Ext_JTAG_SEL = SEL, DIR = O, BUS = XMTC, DEFAULT = SEL, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Ext_JTAG_CAPTURE = CAPTURE, DIR = O, BUS = XMTC, DEFAULT = CAPTURE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Ext_JTAG_SHIFT = SHIFT, DIR = O, BUS = XMTC, DEFAULT = SHIFT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Ext_JTAG_UPDATE = UPDATE, DIR = O, BUS = XMTC, DEFAULT = UPDATE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Ext_JTAG_TDI = TDI, DIR = O, BUS = XMTC, DEFAULT = TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Ext_JTAG_TDO = TDO, DIR = I, BUS = XMTC, DEFAULT = TDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
END

BEGIN proc_sys_reset
 PARAMETER INSTANCE = proc_sys_reset_0
 PARAMETER C_SUBFAMILY = lx, DT = string, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = lx
 PARAMETER C_EXT_RST_WIDTH = 4, DT = integer, RANGE = (1:16), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_AUX_RST_WIDTH = 4, DT = integer, RANGE = (1:16), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_EXT_RESET_HIGH = 0, DT = std_logic, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER C_AUX_RESET_HIGH = 1, DT = std_logic, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_NUM_BUS_RST = 1, DT = integer, RANGE = (1:8), AFFECTS_PORTS_VEC = Bus_Struct_Reset, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_NUM_PERP_RST = 1, DT = integer, RANGE = (1:16), AFFECTS_PORTS_VEC = Peripheral_Reset, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_NUM_INTERCONNECT_ARESETN = 1, DT = integer, RANGE = (1:8), AFFECTS_PORTS_VEC = Interconnect_aresetn, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_NUM_PERP_ARESETN = 1, DT = integer, RANGE = (1:16), AFFECTS_PORTS_VEC = Peripheral_aresetn, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_FAMILY = virtex5, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER HW_VER = 3.00.a
 PORT Slowest_sync_clk = clk_50_0000MHz, DIR = I, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_50_0000MHz
 PORT Ext_Reset_In = sys_rst_s, DIR = I, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_rst_s
 PORT MB_Debug_Sys_Rst = Debug_SYS_Rst, DIR = I, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = Debug_SYS_Rst
 PORT Core_Reset_Req_0 = Core_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST, DEFAULT = Core_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Chip_Reset_Req_0 = Chip_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST, DEFAULT = Chip_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT System_Reset_Req_0 = System_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST, DEFAULT = System_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Core_Reset_Req_1 = Core_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST, DEFAULT = Core_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Chip_Reset_Req_1 = Chip_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST, DEFAULT = Chip_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT System_Reset_Req_1 = System_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST, DEFAULT = System_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dcm_locked = Dcm_all_locked, DIR = I, ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = Dcm_all_locked
 PORT RstcPPCresetcore_0 = RstcPPCresetcore, DIR = O, BUS = RESETPPC0, SIGIS = RST, DEFAULT = RstcPPCresetcore, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT RstcPPCresetchip_0 = RstsPPCresetchip, DIR = O, BUS = RESETPPC0, SIGIS = RST, DEFAULT = RstsPPCresetchip, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT RstcPPCresetsys_0 = RstcPPCresetsys, DIR = O, BUS = RESETPPC0, SIGIS = RST, DEFAULT = RstcPPCresetsys, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT RstcPPCresetcore_1 = RstcPPCresetcore, DIR = O, BUS = RESETPPC1, SIGIS = RST, DEFAULT = RstcPPCresetcore, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT RstcPPCresetchip_1 = RstsPPCresetchip, DIR = O, BUS = RESETPPC1, SIGIS = RST, DEFAULT = RstsPPCresetchip, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT RstcPPCresetsys_1 = RstcPPCresetsys, DIR = O, BUS = RESETPPC1, SIGIS = RST, DEFAULT = RstcPPCresetsys, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MB_Reset = mb_reset, DIR = O, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = mb_reset
 PORT Bus_Struct_Reset = sys_bus_reset, DIR = O, VEC = [0:C_NUM_BUS_RST-1], SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_bus_reset
 PORT Peripheral_Reset = sys_periph_reset, DIR = O, VEC = [0:C_NUM_PERP_RST-1], SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_periph_reset
END

BEGIN xps_intc
 PARAMETER INSTANCE = xps_intc_0
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_BASEADDR = 0x81800000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x20, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x81800000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x8180ffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x8180ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_NUM_INTR_INPUTS = 2, DT = INTEGER, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_intr_inputs, RANGE = (1:C_SPLB_NATIVE_DWIDTH), AFFECTS_PORTS_VEC = Intr, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , MPD_VALUE = 2
 PARAMETER C_KIND_OF_INTR = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_intr, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0xffffffff
 PARAMETER C_KIND_OF_EDGE = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_edge, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0xffffffff
 PARAMETER C_KIND_OF_LVL = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_lvl, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0xffffffff
 PARAMETER C_HAS_IPR = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Interrupt Pending Register, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_HAS_SIE = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Set Interrupt Enables, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_HAS_CIE = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Clear Interrupt Enables, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_HAS_IVR = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Interrupt Vector Register, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_IRQ_IS_LEVEL = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), VALUES = (0 = Edge, 1 = Level ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic, RANGE = (0,1), VALUES = (0 = Falling/Low, 1 = Rising/High ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER HW_VER = 2.01.a
 BUS_INTERFACE SPLB = mb_plb, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Intr = RS232_Interrupt, DIR = I, VEC = [(C_NUM_INTR_INPUTS-1):0], SIGIS = INTERRUPT, ENDIAN = LITTLE, DEFAULT = , ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SENSITIVITY = EDGE_RISING, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = RS232_Interrupt
 PORT Irq = microblaze_0_Interrupt, DIR = O, SIGIS = INTERRUPT, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SENSITIVITY = EDGE_RISING, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = microblaze_0_Interrupt
END

BEGIN xps_iic
 PARAMETER INSTANCE = xps_iic_0
 PARAMETER C_IIC_FREQ = 100000, DT = INTEGER, DESC = IIC (SCL) Clock Frequency, IO_IF = iic_0, IO_IS = clk_out_freq, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 100000
 PARAMETER C_TEN_BIT_ADR = 0, DT = INTEGER, RANGE = (0,1), DESC = IIC Address Width, IO_IF = iic_0, IO_IS = slave_respond_mode, VALUES = (0= 7-bit addresses , 1= 10-bit addresses ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_GPO_WIDTH = 1, DT = INTEGER, RANGE = (1:8), DESC = General Purpose Output Bus Width, IO_IF = iic_0, IO_IS = gpo, AFFECTS_PORTS_VEC = Gpo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_CLK_FREQ = 25000000, DT = INTEGER, IO_IS = clk_freq, CLK_PORT = SPLB_Clk, CLK_UNIT = HZ, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 25000000
 PARAMETER C_SCL_INERTIAL_DELAY = 5, DT = INTEGER, RANGE = (0:255), DESC = SCL intertial delay filter value in clocks, IO_IF = iic_0, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 5
 PARAMETER C_SDA_INERTIAL_DELAY = 5, DT = INTEGER, RANGE = (0:255), DESC = SDA intertial delay filter value in clocks, IO_IF = iic_0, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 5
 PARAMETER C_BASEADDR = 0x81600000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x00200, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x81600000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x8160ffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x8160ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64, 128), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER HW_VER = 2.03.a
 BUS_INTERFACE SPLB = mb_plb, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sda = xps_iic_0_Sda, DIR = IO, THREE_STATE = TRUE, TRI_I = Sda_I, TRI_O = Sda_O, TRI_T = Sda_T, PERMIT = BASE_USER, DESC = ''IIC Serial Data'', IO_IF = iic_0, IO_IS = Serial_Data, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , ENABLE = SINGLE, IOB_STATE = INFER, MHS_VALUE = xps_iic_0_Sda
 PORT Scl = xps_iic_0_Scl, DIR = IO, THREE_STATE = TRUE, TRI_I = Scl_I, TRI_O = Scl_O, TRI_T = Scl_T, PERMIT = BASE_USER, DESC = ''IIC Serial Clock'', IO_IF = iic_0, IO_IS = Serial_Clock, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , ENABLE = SINGLE, IOB_STATE = INFER, MHS_VALUE = xps_iic_0_Scl
END

BEGIN plb_dac
 PARAMETER INSTANCE = plb_dac_0
 PARAMETER C_BASEADDR = 0xc9c00000, DT = std_logic_vector, MIN_SIZE = 0x200, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = SPLB, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0xc9c00000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0xc9c0ffff, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = SPLB, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0xc9c0ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 128, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 128, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, RANGE = (1:16), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, RANGE = (1:4), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 3, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128), ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, RANGE = (0, 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, RANGE = (0, 1), ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , CLK_UNIT = PS, CLK_PORT = SPLB_CLK, MPD_VALUE = 10000, RESOLVED_BUS = SPLB
 PARAMETER C_INCLUDE_DPHASE_TIMER = 1, DT = INTEGER, RANGE = (0, 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_FAMILY = virtex6, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex6
 PARAMETER DAC_WIDTH = 10, DT = INTEGER, AFFECTS_PORTS_VEC = S_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 10
 PARAMETER HW_VER = 1.00.a
 BUS_INTERFACE SPLB = mb_plb, BUS_STD = PLBV46, BUS_TYPE = SLAVE
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT S_Data = plb_dac_0_S_Data, DIR = O, VEC = [0 : (DAC_WIDTH-1)], DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = plb_dac_0_S_Data
 PORT S_DCLKIO = plb_dac_0_S_DCLKIO, DIR = O, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = plb_dac_0_S_DCLKIO
 PORT S_Clkout = plb_dac_0_S_Clkout, DIR = O, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = plb_dac_0_S_Clkout
 PORT S_PinMD = plb_dac_0_S_PinMD, DIR = O, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = plb_dac_0_S_PinMD
 PORT S_ClkMD = plb_dac_0_S_ClkMD, DIR = O, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = plb_dac_0_S_ClkMD
 PORT S_Format = plb_dac_0_S_Format, DIR = O, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = plb_dac_0_S_Format
 PORT S_PWRDN = plb_dac_0_S_PWRDN, DIR = O, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = plb_dac_0_S_PWRDN
END

